Matches saved 2021-10-29T21:55:53.871734Z, input files:
	a:
		245371	SHA256	qh9Am+fagGl8yaGPFfNBonUI2SXVuumqUG3LwbQQTeQ=	mcpfernflower.jar
	b:
		648087	SHA256	8Ao8KIYeV0GMv1SitPytuollnuBFmAr5bidDBUT86yw=	fernflower.jar
	cp:
	cp a:
	cp b:
	non-obf cls b	.*
	non-obf mem b	.*
c	LA;	Lde/fernflower/code/optinstructions/INVOKEINTERFACE;
	m	<init>()V	<init>()V
c	LB;	Lde/fernflower/modules/decompiler/PrimitiveExprsList;
	m	<init>()V	<init>()V
	m	a()LB;	copyStack()Lde/fernflower/modules/decompiler/PrimitiveExprsList;
	m	b()Ljava/util/List;	getLstExprents()Ljava/util/List;
	m	c()Lbs;	getStack()Lde/fernflower/modules/decompiler/ExprentStack;
	f	a;;Ljava/util/List;	lstExprents;;Ljava/util/List;
	f	b;;Lbs;	stack;;Lde/fernflower/modules/decompiler/ExprentStack;
c	LC;	Lde/fernflower/main/rels/NestedClassProcessor;
	m	<init>()V	<init>()V
	m	a(LaK;LaK;)V	processClass(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
		ma	1	1
	m	b(LaK;LaK;)V	checkNotFoundClasses(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
		ma	1	1
	m	c(LaK;LaK;)Z	insertNestedClass(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/ClassesProcessor$ClassNode;)Z
		ma	0	0
		ma	1	1
	m	d(LaK;LaK;)V	insertLocalVars(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
		ma	1	1
	m	a(Lv;)Ljava/util/HashMap;	getMaskLocalVars(Lde/fernflower/main/rels/ClassWrapper;)Ljava/util/HashMap;
		ma	0	0
	m	a(LbW;LcX;Lq;I)Ljava/lang/String;	getEnclosingVarField(Lde/fernflower/struct/StructClass;Lde/fernflower/main/rels/MethodWrapper;Lde/fernflower/modules/decompiler/sforms/DirectGraph;I)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	a(Ljava/util/List;Ljava/util/List;Z)V	mergeListSignatures(Ljava/util/List;Ljava/util/List;Z)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LcX;LaK;)V	setLocalClassDefinition(Lde/fernflower/main/rels/MethodWrapper;Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
		ma	1	1
	m	a(Lca;Ljava/util/HashSet;)Lca;	findFirstBlock(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
		ma	1	1
	m	a(Lca;LQ;Ljava/util/HashSet;)Lca;	getDefStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/struct/gen/VarType;Ljava/util/HashSet;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LaJ;LQ;)Z	searchForClass(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)Z
		ma	0	0
		ma	1	1
c	LD;	Lde/fernflower/code/optinstructions/LDC_W;
	m	<init>()V	<init>()V
c	LE;	Lde/fernflower/modules/decompiler/stats/SynchronizedStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;Lca;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	e_()V	initExprents()V
	m	d()Ljava/util/List;	getSequentialObjects()Ljava/util/List;
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a(Lca;Lca;)V	replaceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	e()V	removeExc()V
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b()V	initSimpleCopy()V
	m	f()Lca;	getBody()Lde/fernflower/modules/decompiler/stats/Statement;
	m	g()Ljava/util/List;	getHeadexprentList()Ljava/util/List;
	f	a;;Lca;	body;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;Ljava/util/List;	headexprent;;Ljava/util/List;
c	LF;	Lde/fernflower/main/rels/MethodProcessorThread;
	m	<init>(Lbn;Lce;LaD;)V	<init>(Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/vars/VarProcessor;Lde/fernflower/main/DecompilerContext;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	run()V	run()V
	m	a(Lbn;Lce;)LS;	codeToJava(Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/vars/VarProcessor;)Lde/fernflower/modules/decompiler/stats/RootStatement;
		ma	0	0
		ma	1	1
	m	a()LS;	getRoot()Lde/fernflower/modules/decompiler/stats/RootStatement;
	m	b()Ljava/lang/Throwable;	getError()Ljava/lang/Throwable;
	f	a;;Lbn;	method;;Lde/fernflower/struct/StructMethod;
	f	b;;Lce;	varproc;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
	f	c;;LaD;	parentContext;;Lde/fernflower/main/DecompilerContext;
	f	d;;LS;	root;;Lde/fernflower/modules/decompiler/stats/RootStatement;
	f	e;;Ljava/lang/Throwable;	error;;Ljava/lang/Throwable;
c	LG;	Lde/fernflower/modules/decompiler/stats/IfStatement;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	<init>(Lca;ILca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;ILde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a(Lca;)Lca;	isHead(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	e_()V	initExprents()V
	m	d()Ljava/util/List;	getSequentialObjects()Ljava/util/List;
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a(Lca;Lca;)V	replaceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b()V	initSimpleCopy()V
	m	e()Lca;	getElsestat()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b(Lca;)V	setElsestat(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	f()Lca;	getIfstat()Lde/fernflower/modules/decompiler/stats/Statement;
	m	c(Lca;)V	setIfstat(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	g()Z	isNegated()Z
	m	a(Z)V	setNegated(Z)V
		ma	0	0
	m	h()Ljava/util/List;	getHeadexprentList()Ljava/util/List;
	m	i()Lo;	getHeadexprent()Lde/fernflower/modules/decompiler/exps/IfExprent;
	m	a(LcV;)V	setElseEdge(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	b(LcV;)V	setIfEdge(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	j()LcV;	getIfEdge()Lde/fernflower/modules/decompiler/StatEdge;
	m	k()LcV;	getElseEdge()Lde/fernflower/modules/decompiler/StatEdge;
	f	a;;I	IFTYPE_IFELSE;;I
	f	b;;I	iftype;;I
	f	k;;Lca;	ifstat;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	l;;Lca;	elsestat;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	m;;LcV;	ifedge;;Lde/fernflower/modules/decompiler/StatEdge;
	f	n;;LcV;	elseedge;;Lde/fernflower/modules/decompiler/StatEdge;
	f	o;;Z	negated;;Z
	f	p;;Z	iffflag;;Z
	f	q;;Ljava/util/List;	headexprent;;Ljava/util/List;
c	LH;	Lde/fernflower/modules/decompiler/FinallyProcessor$1BlockStackEntry;
	m	<init>(LbT;LbT;Ljava/util/List;)V	<init>(Lde/fernflower/modules/decompiler/FinallyProcessor;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;Ljava/util/List;)V
	f	a;;LbT;	blockCatch;;Lde/fernflower/code/cfg/BasicBlock;
	f	b;;LbT;	blockSample;;Lde/fernflower/code/cfg/BasicBlock;
	f	c;;Ljava/util/List;	lstStoreVars;;Ljava/util/List;
c	LI;	Lde/fernflower/code/optinstructions/SIPUSH;
	m	<init>()V	<init>()V
c	LJ;	Lde/fernflower/modules/decompiler/deobfuscator/IrreducibleCFGDeobfuscator;
	m	<init>()V	<init>()V
	m	a(Lca;)Z	isStatementIrreducible(Lde/fernflower/modules/decompiler/stats/Statement;)Z
	m	b(Lca;)Z	splitIrreducibleNode(Lde/fernflower/modules/decompiler/stats/Statement;)Z
	m	c(Lca;)I	getStatementSize(Lde/fernflower/modules/decompiler/stats/Statement;)I
	m	a(Lca;Lca;Ljava/util/HashMap;)Lca;	copyStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
		ma	1	1
		ma	2	2
	m	d(Lca;)V	initCopiedStatement(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
c	LK;	Lde/fernflower/main/ClassReference14Processor$1;
	m	<init>(Lx;Ljava/util/HashMap;Ljava/util/HashSet;)V	<init>(Lde/fernflower/main/ClassReference14Processor;Ljava/util/HashMap;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
	f	a;;Lx;	this$0;;Lde/fernflower/main/ClassReference14Processor;
	f	b;;Ljava/util/HashMap;	val$mapClassMeths;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashSet;	val$setFound;;Ljava/util/HashSet;
c	LL;	Lde/fernflower/code/optinstructions/INVOKEVIRTUAL;
	m	<init>()V	<init>()V
c	LM;	Lde/fernflower/code/optinstructions/LLOAD;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	LN;	Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper$1StatementStackEntry;
	m	<init>(Lca;Ljava/util/LinkedList;Ljava/util/List;)V	<init>(Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper;Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/LinkedList;Ljava/util/List;)V
	f	a;;Lca;	statement;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;Ljava/util/LinkedList;	stackFinally;;Ljava/util/LinkedList;
	f	c;;Ljava/util/List;	tailExprents;;Ljava/util/List;
	f	d;;I	statementIndex;;I
	f	e;;I	edgeIndex;;I
	f	f;;Ljava/util/List;	succEdges;;Ljava/util/List;
c	LO;	Lde/fernflower/code/FullInstructionSequence;
	m	<init>(LcE;Lbf;)V	<init>(Lde/fernflower/util/VBStyleCollection;Lde/fernflower/code/ExceptionTable;)V
c	LP;	Lde/fernflower/code/ExceptionHandler;
	m	<init>()V	<init>()V
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	f	a;;I	from;;I
	f	b;;I	to;;I
	f	c;;I	handler;;I
	f	d;;I	from_instr;;I
	f	e;;I	to_instr;;I
	f	f;;I	handler_instr;;I
	f	g;;Ljava/lang/String;	exceptionClass;;Ljava/lang/String;
c	LQ;	Lde/fernflower/struct/gen/VarType;
	m	<clinit>()V	<clinit>()V
	m	<init>(I)V	<init>(I)V
		ma	0	0
	m	<init>(II)V	<init>(II)V
		ma	0	0
		ma	1	1
	m	<init>(IILjava/lang/String;)V	<init>(IILjava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Ljava/lang/String;)V	<init>(Ljava/lang/String;)V
		ma	0	0
	m	<init>(Ljava/lang/String;Z)V	<init>(Ljava/lang/String;Z)V
		ma	0	0
		ma	1	1
	m	a()V	decArrayDim()V
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	b()LQ;	copy()Lde/fernflower/struct/gen/VarType;
	m	a(LQ;)Z	isSuperset(Lde/fernflower/struct/gen/VarType;)Z
		ma	0	0
	m	b(LQ;)Z	isStrictSuperset(Lde/fernflower/struct/gen/VarType;)Z
		ma	0	0
	m	a(LQ;LQ;)LQ;	getCommonMinType(Lde/fernflower/struct/gen/VarType;Lde/fernflower/struct/gen/VarType;)Lde/fernflower/struct/gen/VarType;
		ma	0	0
		ma	1	1
	m	b(LQ;LQ;)LQ;	getCommonSupertype(Lde/fernflower/struct/gen/VarType;Lde/fernflower/struct/gen/VarType;)Lde/fernflower/struct/gen/VarType;
		ma	0	0
		ma	1	1
	m	a(I)LQ;	getMinTypeInFamily(I)Lde/fernflower/struct/gen/VarType;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(Ljava/lang/String;Z)V	parseTypeString(Ljava/lang/String;Z)V
	m	b(I)V	setStackSize(I)V
		ma	0	0
	m	c()V	setFamily()V
	f	a;;LQ;	VARTYPE_UNKNOWN;;Lde/fernflower/struct/gen/VarType;
	f	b;;LQ;	VARTYPE_INT;;Lde/fernflower/struct/gen/VarType;
	f	c;;LQ;	VARTYPE_FLOAT;;Lde/fernflower/struct/gen/VarType;
	f	d;;LQ;	VARTYPE_LONG;;Lde/fernflower/struct/gen/VarType;
	f	e;;LQ;	VARTYPE_DOUBLE;;Lde/fernflower/struct/gen/VarType;
	f	f;;LQ;	VARTYPE_BYTE;;Lde/fernflower/struct/gen/VarType;
	f	g;;LQ;	VARTYPE_CHAR;;Lde/fernflower/struct/gen/VarType;
	f	h;;LQ;	VARTYPE_SHORT;;Lde/fernflower/struct/gen/VarType;
	f	i;;LQ;	VARTYPE_BOOLEAN;;Lde/fernflower/struct/gen/VarType;
	f	j;;LQ;	VARTYPE_BYTECHAR;;Lde/fernflower/struct/gen/VarType;
	f	k;;LQ;	VARTYPE_SHORTCHAR;;Lde/fernflower/struct/gen/VarType;
	f	l;;LQ;	VARTYPE_NULL;;Lde/fernflower/struct/gen/VarType;
	f	m;;LQ;	VARTYPE_STRING;;Lde/fernflower/struct/gen/VarType;
	f	n;;LQ;	VARTYPE_CLASS;;Lde/fernflower/struct/gen/VarType;
	f	o;;LQ;	VARTYPE_OBJECT;;Lde/fernflower/struct/gen/VarType;
	f	p;;LQ;	VARTYPE_VOID;;Lde/fernflower/struct/gen/VarType;
	f	q;;I	type;;I
	f	r;;I	type_family;;I
	f	s;;I	arraydim;;I
	f	t;;Ljava/lang/String;	value;;Ljava/lang/String;
	f	u;;I	stack_size;;I
	f	v;;I	convinfo;;I
c	LR;	Lde/fernflower/modules/decompiler/stats/SwitchStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;)Lca;	isHead(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	e_()V	initExprents()V
	m	d()Ljava/util/List;	getSequentialObjects()Ljava/util/List;
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a(Lca;Lca;)V	replaceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b()V	initSimpleCopy()V
	m	e()V	sortEdgesAndNodes()V
	m	f()Ljava/util/List;	getHeadexprentList()Ljava/util/List;
	m	g()Ljava/util/List;	getCaseEdges()Ljava/util/List;
	m	h()Ljava/util/List;	getCaseStatements()Ljava/util/List;
	m	i()LcV;	getDefault_edge()Lde/fernflower/modules/decompiler/StatEdge;
	f	a;;Ljava/util/List;	caseStatements;;Ljava/util/List;
	f	b;;Ljava/util/List;	caseEdges;;Ljava/util/List;
	f	k;;Ljava/util/List;	caseValues;;Ljava/util/List;
	f	l;;LcV;	default_edge;;Lde/fernflower/modules/decompiler/StatEdge;
	f	m;;Ljava/util/List;	headexprent;;Ljava/util/List;
c	LS;	Lde/fernflower/modules/decompiler/stats/RootStatement;
	m	<init>(Lca;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	e()Lca;	getDummyExit()Lde/fernflower/modules/decompiler/stats/Statement;
	f	a;;Lca;	dummyExit;;Lde/fernflower/modules/decompiler/stats/Statement;
c	LT;	Lde/fernflower/struct/consts/PrimitiveConstant;
	m	<init>(ILjava/lang/Object;)V	<init>(ILjava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	<init>(II)V	<init>(II)V
		ma	0	0
		ma	1	1
	m	a(LbK;)V	resolveConstant(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a()V	initConstant()V
	f	c;;I	index;;I
	f	a;;Ljava/lang/Object;	value;;Ljava/lang/Object;
	f	b;;Z	isArray;;Z
c	LU;	Lde/fernflower/struct/attr/StructLocalVariableTableAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a(LU;)V	addLocalVariableTable(Lde/fernflower/struct/attr/StructLocalVariableTableAttribute;)V
		ma	0	0
	m	a()Ljava/util/HashMap;	getMapVarNames()Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	mapVarNames;;Ljava/util/HashMap;
c	LV;	Lde/fernflower/modules/renamer/ClassWrapperNode;
	m	<init>(LbW;)V	<init>(Lde/fernflower/struct/StructClass;)V
		ma	0	0
	m	a(LV;)V	addSubclass(Lde/fernflower/modules/renamer/ClassWrapperNode;)V
		ma	0	0
	m	a()LbW;	getClassStruct()Lde/fernflower/struct/StructClass;
	m	b()Ljava/util/List;	getSubclasses()Ljava/util/List;
	f	a;;LbW;	classStruct;;Lde/fernflower/struct/StructClass;
	f	b;;Ljava/util/List;	subclasses;;Ljava/util/List;
c	LW;	Lde/fernflower/struct/attr/StructAnnDefaultAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a()LaJ;	getDefaultValue()Lde/fernflower/modules/decompiler/exps/Exprent;
	f	c;;LaJ;	defaultValue;;Lde/fernflower/modules/decompiler/exps/Exprent;
c	LX;	Lde/fernflower/modules/decompiler/exps/ArrayExprent;
	m	<init>(LaJ;LaJ;LQ;)V	<init>(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	f()LaJ;	getArray()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	g()LaJ;	getIndex()Lde/fernflower/modules/decompiler/exps/Exprent;
	f	c;;LaJ;	array;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	d;;LaJ;	index;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	e;;LQ;	hardtype;;Lde/fernflower/struct/gen/VarType;
c	LY;	Lde/fernflower/modules/decompiler/vars/CheckTypesResult$ExprentTypePair;
	m	<init>(LaJ;LQ;)V	<init>(Lde/fernflower/modules/decompiler/vars/CheckTypesResult;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;Lde/fernflower/struct/gen/VarType;)V
	f	a;;LaJ;	exprent;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	b;;LQ;	type;;Lde/fernflower/struct/gen/VarType;
c	LZ;	Lde/fernflower/code/optinstructions/INSTANCEOF;
	m	<init>()V	<init>()V
c	La;	Lde/fernflower/main/AssertProcessor;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(Lv;)V	findAssertionField(Lde/fernflower/main/rels/ClassWrapper;)Lde/fernflower/struct/StructField;
		ma	0	0
	m	a(Lca;Ljava/lang/String;Ljava/lang/String;)Z	replaceAssertion(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/IfStatement;Ljava/lang/String;Ljava/lang/String;)Z
		ma	0	0
		ma	1	3
		ma	2	2
	m	a(LaJ;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/Object;	getAssertionExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/Object;
		ma	0	0
		ma	1	1
		ma	2	2
	m	b(LaJ;Ljava/lang/String;Ljava/lang/String;)Z	isAssertionField(Lde/fernflower/modules/decompiler/exps/Exprent;Ljava/lang/String;Ljava/lang/String;)Z
		ma	0	0
		ma	1	1
		ma	2	2
	f	a;;LQ;	CLASS_ASSERTION_ERROR;;Lde/fernflower/struct/gen/VarType;
c	LaA;	Lde/fernflower/struct/attr/StructGenericSignatureAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a()Ljava/lang/String;	getSignature()Ljava/lang/String;
	f	c;;Ljava/lang/String;	signature;;Ljava/lang/String;
c	LaB;	Lde/fernflower/modules/decompiler/InlineSingleBlockHelper;
	m	<init>()V	<init>()V
	m	a(LS;)Z	inlineSingleBlocks(Lde/fernflower/modules/decompiler/stats/RootStatement;)Z
		ma	0	0
	m	a(Lca;)Z	inlineSingleBlocksRec(Lde/fernflower/modules/decompiler/stats/Statement;)Z
	m	b(Lca;Lca;)Z	noExitLabels(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
		ma	1	1
	m	a(Lca;Lca;)Z	isBreakEdgeLabeled(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
		ma	1	1
c	LaC;	Lde/fernflower/modules/decompiler/exps/AssignmentExprent;
	m	<clinit>()V	<clinit>()V
	m	<init>(LaJ;LaJ;)V	<init>(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	c_()I	getPrecedence()I
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	g()LaJ;	getLeft()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	h()LaJ;	getRight()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(LaJ;)V	setRight(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	i()I	getCondtype()I
	m	b(I)V	setCondtype(I)V
		ma	0	0
	f	c;;[Ljava/lang/String;	funceq;;[Ljava/lang/String;
	f	d;;LaJ;	left;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	e;;LaJ;	right;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	f;;I	condtype;;I
c	LaD;	Lde/fernflower/main/DecompilerContext;
	m	<clinit>()V	<clinit>()V
	m	<init>(Ljava/util/HashMap;)V	<init>(Ljava/util/HashMap;)V
		ma	0	0
	m	a(Ljava/util/HashMap;)V	initContext(Ljava/util/HashMap;)V
		ma	0	0
	m	a()LaD;	getCurrentContext()Lde/fernflower/main/DecompilerContext;
	m	a(LaD;)V	setCurrentContext(Lde/fernflower/main/DecompilerContext;)V
		ma	0	0
	m	a(Ljava/lang/String;)Ljava/lang/Object;	getProperty(Ljava/lang/String;)Ljava/lang/Object;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/Object;)V	setProperty(Ljava/lang/String;Ljava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	b(Ljava/lang/String;)Z	getOption(Ljava/lang/String;)Z
		ma	0	0
	m	b()LcL;	getImpcollector()Lde/fernflower/main/collectors/ImportCollector;
	m	a(LcL;)V	setImpcollector(Lde/fernflower/main/collectors/ImportCollector;)V
		ma	0	0
	m	c()LbS;	getVarncollector()Lde/fernflower/main/collectors/VarNamesCollector;
	m	a(LbS;)V	setVarncollector(Lde/fernflower/main/collectors/VarNamesCollector;)V
		ma	0	0
	m	d()Li;	getStructcontext()Lde/fernflower/struct/StructContext;
	m	a(Li;)V	setStructcontext(Lde/fernflower/struct/StructContext;)V
		ma	0	0
	m	e()LaI;	getCountercontainer()Lde/fernflower/main/collectors/CounterContainer;
	m	a(LaI;)V	setCountercontainer(Lde/fernflower/main/collectors/CounterContainer;)V
		ma	0	0
	m	f()LcG;	getClassprocessor()Lde/fernflower/main/ClassesProcessor;
	m	a(LcG;)V	setClassprocessor(Lde/fernflower/main/ClassesProcessor;)V
		ma	0	0
	m	g()Lu;	getPoolInterceptor()Lde/fernflower/modules/renamer/PoolInterceptor;
	m	a(Lu;)V	setPoolInterceptor(Lde/fernflower/modules/renamer/PoolInterceptor;)V
		ma	0	0
	m	h()Lde/fernflower/main/extern/IFernflowerLogger;	getLogger()Lde/fernflower/main/extern/IFernflowerLogger;
	m	a(Lde/fernflower/main/extern/IFernflowerLogger;)V	setLogger(Lde/fernflower/main/extern/IFernflowerLogger;)V
		ma	0	0
	f	a;;Ljava/lang/ThreadLocal;	currentContext;;Ljava/lang/ThreadLocal;
	f	b;;Ljava/util/HashMap;	properties;;Ljava/util/HashMap;
	f	c;;Li;	structcontext;;Lde/fernflower/struct/StructContext;
	f	d;;LcL;	impcollector;;Lde/fernflower/main/collectors/ImportCollector;
	f	e;;LbS;	varncollector;;Lde/fernflower/main/collectors/VarNamesCollector;
	f	f;;LaI;	countercontainer;;Lde/fernflower/main/collectors/CounterContainer;
	f	g;;LcG;	classprocessor;;Lde/fernflower/main/ClassesProcessor;
	f	h;;Lu;	poolinterceptor;;Lde/fernflower/modules/renamer/PoolInterceptor;
	f	i;;Lde/fernflower/main/extern/IFernflowerLogger;	logger;;Lde/fernflower/main/extern/IFernflowerLogger;
c	LaE;	Lde/fernflower/code/optinstructions/IINC;
	m	<init>()V	<init>()V
c	LaF;	Lde/fernflower/code/optinstructions/LSTORE;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	LaG;	Lde/fernflower/modules/decompiler/exps/FieldExprent;
	m	<init>(Lg;LaJ;)V	<init>(Lde/fernflower/struct/consts/LinkConstant;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	<init>(Ljava/lang/String;Ljava/lang/String;ZLaJ;Lam;)V	<init>(Ljava/lang/String;Ljava/lang/String;ZLde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/FieldDescriptor;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	g()Ljava/lang/String;	getClassname()Ljava/lang/String;
	m	h()Ljava/lang/String;	getDescriptor()Lde/fernflower/struct/gen/FieldDescriptor;
	m	i()LaJ;	getInstance()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	j()Z	isStatic()Z
	m	k()Ljava/lang/String;	getName()Ljava/lang/String;
	f	c;;Ljava/lang/String;	name;;Ljava/lang/String;
	f	d;;Ljava/lang/String;	classname;;Ljava/lang/String;
	f	e;;Z	isStatic;;Z
	f	f;;LaJ;	instance;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	g;;Lam;	descriptor;;Lde/fernflower/struct/gen/FieldDescriptor;
c	LaH;	Lde/fernflower/code/interpreter/InstructionImpact;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(LaR;Lj;LbK;)V	processSpecialInstructions(Lde/fernflower/struct/gen/DataPoint;Lde/fernflower/code/Instruction;Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
		ma	1	1
		ma	2	2
	f	a;;[[[I	stack_impact;;[[[I
	f	b;;[I	arr_type;;[I
c	LaI;	Lde/fernflower/main/collectors/CounterContainer;
	m	<init>()V	<init>()V
	m	a(II)V	setCounter(II)V
		ma	0	0
		ma	1	1
	m	a()I	getCounter(I)I
	m	a(I)I	getCounterAndIncrement(I)I
		ma	0	0
	f	a;;[I	values;;[I
c	LaJ;	Lde/fernflower/modules/decompiler/exps/Exprent;
	m	<init>()V	<init>()V
	m	c_()I	getPrecedence()I
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b(LaJ;)Z	containsExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)Z
		ma	0	0
	m	a(Z)Ljava/util/List;	getAllExprents(Z)Ljava/util/List;
	m	p()Ljava/util/Set;	getAllVariables()Ljava/util/Set;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	f	a;;I	type;;I
	f	b;;I	id;;I
c	LaK;	Lde/fernflower/main/ClassesProcessor$ClassNode;
	m	<init>(LbW;)V	<init>(Lde/fernflower/main/ClassesProcessor;ILde/fernflower/struct/StructClass;)V
		ma	0	2
	m	a(Ljava/lang/String;)LaK;	getClassNode(Ljava/lang/String;)Lde/fernflower/main/ClassesProcessor$ClassNode;
		ma	0	0
	f	a;;I	type;;I
	f	b;;I	access;;I
	f	c;;Ljava/lang/String;	simpleName;;Ljava/lang/String;
	f	d;;LbW;	classStruct;;Lde/fernflower/struct/StructClass;
	f	e;;Lv;	wrapper;;Lde/fernflower/main/rels/ClassWrapper;
	f	f;;Ljava/lang/String;	enclosingMethod;;Ljava/lang/String;
	f	g;;LcR;	superInvocation;;Lde/fernflower/modules/decompiler/exps/InvocationExprent;
	f	h;;Ljava/util/HashMap;	mapFieldsToVars;;Ljava/util/HashMap;
	f	i;;Ljava/util/HashMap;	this$0;;Lde/fernflower/main/ClassesProcessor;
	f	j;;LQ;	anonimousClassType;;Lde/fernflower/struct/gen/VarType;
	f	k;;Ljava/util/List;	nested;;Ljava/util/List;
	f	l;;Ljava/util/Set;	enclosingClasses;;Ljava/util/Set;
	f	m;;LaK;	parent;;Lde/fernflower/main/ClassesProcessor$ClassNode;
c	LaL;	Lde/fernflower/code/optinstructions/LDC2_W;
	m	<init>()V	<init>()V
c	LaM;	Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	<init>()V	<init>()V
	m	a(LaJ;LQ;)V	addMaxTypeExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)V
	m	b(LaJ;LQ;)V	addMinTypeExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)V
	m	a()Ljava/util/List;	getLstMaxTypeExprents()Ljava/util/List;
	m	b()Ljava/util/List;	getLstMinTypeExprents()Ljava/util/List;
	f	a;;Ljava/util/List;	lstMaxTypeExprents;;Ljava/util/List;
	f	b;;Ljava/util/List;	lstMinTypeExprents;;Ljava/util/List;
c	LaN;	Lde/fernflower/code/optinstructions/DSTORE;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	LaO;	Lde/fernflower/modules/decompiler/sforms/SSAConstructorSparseEx;
	m	<init>()V	<init>()V
	m	a(LS;Lbn;)V	splitVariables(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/struct/StructMethod;)V
		ma	1	1
	m	a(Lq;Ljava/util/HashSet;)V	ssaStatements(Lde/fernflower/modules/decompiler/sforms/DirectGraph;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
	m	a(LaJ;[LbZ;)V	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;[Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	1	1
	m	a(Ljava/lang/Integer;)Ljava/lang/Integer;	getNextFreeVersion(Ljava/lang/Integer;)Ljava/lang/Integer;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;Lq;Ljava/lang/String;)LbZ;	getFilteredOutMap(Ljava/lang/String;Ljava/lang/String;Lde/fernflower/modules/decompiler/sforms/DirectGraph;Ljava/lang/String;)Lde/fernflower/util/SFormsFastMapDirect;
		ma	0	0
		ma	2	2
		ma	3	3
	m	a(LbZ;LbZ;)LbZ;	mergeMaps(Lde/fernflower/util/SFormsFastMapDirect;Lde/fernflower/util/SFormsFastMapDirect;)Lde/fernflower/util/SFormsFastMapDirect;
	m	b(LbZ;LbZ;)Z	mapsEqual(Lde/fernflower/util/SFormsFastMapDirect;Lde/fernflower/util/SFormsFastMapDirect;)Z
	m	a(LbZ;Ljava/lang/Integer;Ljava/lang/Integer;)V	setCurrentVar(Lde/fernflower/util/SFormsFastMapDirect;Ljava/lang/Integer;Ljava/lang/Integer;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lca;Lq;Ldd;)V	setCatchMaps(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/sforms/DirectGraph;Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lbn;)LbZ;	createFirstMap(Lde/fernflower/struct/StructMethod;)Lde/fernflower/util/SFormsFastMapDirect;
		ma	0	0
	m	a()Ljava/util/HashMap;	getPhi()Ljava/util/HashMap;
	f	a;;Ljava/util/HashMap;	inVarVersions;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	outVarVersions;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	outNegVarVersions;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashMap;	extraVarVersions;;Ljava/util/HashMap;
	f	e;;Ljava/util/HashMap;	phi;;Ljava/util/HashMap;
	f	f;;Ljava/util/HashMap;	lastversion;;Ljava/util/HashMap;
	f	g;;Ljava/util/List;	startVars;;Ljava/util/List;
	f	h;;LcM;	factory;;Lde/fernflower/util/FastSparseSetFactory;
c	LaP;	Lde/fernflower/code/optinstructions/PUTFIELD;
	m	<init>()V	<init>()V
c	LaQ;	Lde/fernflower/modules/decompiler/vars/VarTypeProcessor$2;
	m	<init>(Lcu;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;)V
		ma	0	0
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
	f	a;;Lcu;	this$0;;Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;
c	LaR;	Lde/fernflower/struct/gen/DataPoint;
	m	<init>()V	<init>()V
	m	a(ILQ;)V	setVariable(ILde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
	m	a(I)LQ;	getVariable(I)Lde/fernflower/struct/gen/VarType;
		ma	0	0
	m	a()LaR;	copy()Lde/fernflower/struct/gen/DataPoint;
	m	a(Lbn;)LaR;	getInitialDataPoint(Lde/fernflower/struct/StructMethod;)Lde/fernflower/struct/gen/DataPoint;
	m	b()Ljava/util/List;	getLocalVariables()Ljava/util/List;
	m	a(Ljava/util/List;)V	setLocalVariables(Ljava/util/List;)V
	m	c()Lcb;	getStack()Lde/fernflower/util/ListStack;
	f	a;;Ljava/util/List;	localVariables;;Ljava/util/List;
	f	b;;Lcb;	stack;;Lde/fernflower/util/ListStack;
c	LaS;	Lde/fernflower/modules/decompiler/SequenceHelper;
	m	<init>()V	<init>()V
	m	a(Lca;)V	condenseSequences(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	c(Lca;)V	condenseSequencesRec(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;Lca;)Z	isSequenceDisbandable(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
	m	a(Lcx;)V	removeEmptyStatements(Lde/fernflower/modules/decompiler/stats/SequenceStatement;)V
		ma	0	0
	m	d(Lca;)Lca;	getFirstExprentlist(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	b(Lca;)V	destroyAndFlattenStatement(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;Z)V	destroyStatementContent(Lde/fernflower/modules/decompiler/stats/Statement;Z)V
		ma	0	0
		ma	1	1
c	LaT;	Lde/fernflower/modules/decompiler/vars/VarTypeProcessor$1;
	m	<init>()V	<init>(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;)V
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
c	LaU;	Lde/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator$1;
	m	<init>(LcI;)V	<init>(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	a()Ljava/util/List;	getReversePostOrderList()Ljava/util/List;
	m	b()Ljava/util/Set;	getRoots()Ljava/util/Set;
	f	a;;LcI;	val$graph;;Lde/fernflower/code/cfg/ControlFlowGraph;
c	LaV;	Lde/fernflower/modules/decompiler/SimplifyExprentsHelper;
	m	<init>(Z)V	<init>(Z)V
		ma	0	0
	m	a(Lca;Ljava/util/HashSet;LaO;)Z	buildIff(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/sforms/SSAConstructorSparseEx;)Z
	m	a(Ljava/util/List;)Z	simplifyStackVarsExprents(Ljava/util/List;)Z
	m	a(Ljava/util/List;I)I	isArrayInitializer(Ljava/util/List;I)I
	m	a(LaJ;LaJ;)Z	isStackAssignement(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)Z
	m	b(LaJ;LaJ;)Z	isQualifiedNewGetClass(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)Z
		ma	0	0
	m	a(LaJ;)LaJ;	isSimpleConstructorInvocation(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	f	a;;Z	firstInvocation;;Z
c	LaW;	Lde/fernflower/modules/decompiler/exps/AssertExprent;
	m	<init>(Ljava/util/List;)V	<init>(Ljava/util/List;)V
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	f	c;;Ljava/util/List;	parameters;;Ljava/util/List;
c	LaX;	Lde/fernflower/modules/decompiler/DomHelper;
	m	<init>()V	<init>()V
	m	b(Lca;)LcE;	calcPostDominators(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/util/VBStyleCollection;
		ma	0	0
	m	a(LcI;)LS;	graphToStatement(Lde/fernflower/code/cfg/ControlFlowGraph;)Lde/fernflower/modules/decompiler/stats/RootStatement;
		ma	0	0
	m	a(Lca;)V	removeSynchronizedHandler(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	c(Lca;)V	buildSynchronized(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;Ljava/util/HashMap;)Z	processStatement(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
		ma	0	0
		ma	1	1
	m	a(Lca;ZLjava/util/HashMap;)Lca;	findGeneralStatement(Lde/fernflower/modules/decompiler/stats/Statement;ZLjava/util/HashMap;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/util/HashSet;)Z	checkSynchronizedCompleteness(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)Z
		ma	0	1
	m	b(Lca;Ljava/util/HashMap;)Z	findSimpleStatements(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
		ma	0	0
		ma	1	1
c	LaY;	Lde/fernflower/modules/decompiler/exps/NewExprent;
	m	<init>(LQ;Lcb;I)V	<init>(Lde/fernflower/struct/gen/VarType;Lde/fernflower/util/ListStack;I)V
		ma	1	1
		ma	2	2
	m	<init>(LQ;Ljava/util/List;)V	<init>(Lde/fernflower/struct/gen/VarType;Ljava/util/List;)V
		ma	0	0
		ma	1	1
	m	n()V	setAnonymous()V
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	c_()I	getPrecedence()I
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/util/List;I)Ljava/lang/String;	getQualifiedNewInstance(Ljava/lang/String;Ljava/util/List;I)Ljava/lang/String;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	g()LcR;	getConstructor()Lde/fernflower/modules/decompiler/exps/InvocationExprent;
	m	a(LcR;)V	setConstructor(Lde/fernflower/modules/decompiler/exps/InvocationExprent;)V
		ma	0	0
	m	h()Ljava/util/List;	getLstDims()Ljava/util/List;
	m	i()LQ;	getNewtype()Lde/fernflower/struct/gen/VarType;
	m	j()Ljava/util/List;	getLstArrayElements()Ljava/util/List;
	m	a(Ljava/util/List;)V	setLstArrayElements(Ljava/util/List;)V
	m	k()V	setDirectArrayInit(Z)V
	m	l()Z	isAnonymous()Z
	m	m()V	setEnumconst(Z)V
	f	c;;LcR;	constructor;;Lde/fernflower/modules/decompiler/exps/InvocationExprent;
	f	d;;LQ;	newtype;;Lde/fernflower/struct/gen/VarType;
	f	e;;Ljava/util/List;	lstDims;;Ljava/util/List;
	f	f;;Ljava/util/List;	lstArrayElements;;Ljava/util/List;
	f	g;;Z	directArrayInit;;Z
	f	h;;Z	anonymous;;Z
	f	i;;Z	enumconst;;Z
c	LaZ;	Lde/fernflower/modules/renamer/ConverterHelper;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	toBeRenamed(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z	toBeRenamed(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	getNextClassname(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextClassname(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	1	1
	m	getNextFieldname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextFieldname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	getNextMethodname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextMethodname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/lang/String;)Ljava/lang/String;	getSimpleClassName(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	replaceSimpleClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
	f	a;;Ljava/util/HashSet;	setReserved;;Ljava/util/HashSet;
	f	b;;I	class_counter;;I
	f	c;;I	field_counter;;I
	f	d;;I	method_counter;;I
	f	e;;Ljava/util/HashSet;	setNonStandardClassNames;;Ljava/util/HashSet;
c	Laa;	Lde/fernflower/modules/decompiler/exps/VarExprent;
	m	<init>(ILQ;Lce;)V	<init>(ILde/fernflower/struct/gen/VarType;Lde/fernflower/modules/decompiler/vars/VarProcessor;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	f()I	getIndex()I
	m	b(I)V	setIndex(I)V
		ma	0	0
	m	g()LQ;	getVartype()Lde/fernflower/struct/gen/VarType;
	m	a(LQ;)V	setVartype(Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
	m	h()Z	isDefinition()Z
	m	i()V	setDefinition(Z)V
	m	j()Lce;	getProcessor()Lde/fernflower/modules/decompiler/vars/VarProcessor;
	m	k()I	getVersion()I
	m	c(I)V	setVersion(I)V
		ma	0	0
	m	l()Z	isClassdef()Z
	m	m()V	setClassdef(Z)V
	m	n()Z	isStack()Z
	m	o()V	setStack(Z)V
	f	c;;I	index;;I
	f	d;;LQ;	vartype;;Lde/fernflower/struct/gen/VarType;
	f	e;;Z	definition;;Z
	f	f;;Lce;	processor;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
	f	g;;I	version;;I
	f	h;;Z	classdef;;Z
	f	i;;Z	stack;;Z
c	Lab;	Lde/fernflower/code/optinstructions/INVOKESTATIC;
	m	<init>()V	<init>()V
c	Lac;	Lde/fernflower/code/optinstructions/GOTO_W;
	m	<init>()V	<init>()V
c	Lad;	Lde/fernflower/code/optinstructions/BIPUSH;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lae;	Lde/fernflower/code/optinstructions/PUTSTATIC;
	m	<init>()V	<init>()V
c	Laf;	Lde/fernflower/struct/attr/StructEnclosingMethodAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
	m	a()Ljava/lang/String;	getClassname()Ljava/lang/String;
	m	b()Ljava/lang/String;	getMethodDescriptor()Ljava/lang/String;
	m	c()Ljava/lang/String;	getMethodName()Ljava/lang/String;
	f	c;;Ljava/lang/String;	classname;;Ljava/lang/String;
	f	d;;Ljava/lang/String;	mtname;;Ljava/lang/String;
	f	e;;Ljava/lang/String;	methodDescriptor;;Ljava/lang/String;
c	Lag;	Lde/fernflower/modules/decompiler/LabelHelper;
	m	<init>()V	<init>()V
	m	a(LS;)V	cleanUpEdges(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
		ma	0	0
	m	b(LS;)V	setRetEdgesUnlabeled(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
	m	c(Lca;)V	liftClosures(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	d(Lca;)V	removeNonImmediateEdges(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;Ljava/util/HashSet;)V	lowContinueLabels(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
	m	a(Lca;)V	lowClosures(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	e(Lca;)V	resetAllEdges(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	f(Lca;)Ljava/util/HashMap;	setExplicitEdges(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/HashMap;
		ma	0	0
	m	a(Lca;Ljava/util/HashMap;Lca;)V	processEdgesWithNext(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	1	1
	m	g(Lca;)V	hideDefaultSwitchEdges(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	h(Lca;)[Ljava/util/HashSet;	processStatementLabel(Lde/fernflower/modules/decompiler/stats/Statement;)[Ljava/util/HashSet;
		ma	0	0
	m	b(Lca;)V	replaceContinueWithBreak(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
c	Lah;	Lde/fernflower/modules/decompiler/decompose/IGraphNode;
	m	a()Ljava/util/List;	getPredecessors()Ljava/util/List;
c	Lai;	Lde/fernflower/code/cfg/ExceptionRangeCFG;
	m	<init>(Ljava/util/List;LbT;Ljava/lang/String;)V	<init>(Ljava/util/List;Lde/fernflower/code/cfg/BasicBlock;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()Z	isCircular()Z
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	b()LbT;	getHandler()Lde/fernflower/code/cfg/BasicBlock;
	m	a(LbT;)V	setHandler(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	c()Ljava/util/List;	getProtectedRange()Ljava/util/List;
	m	d()Ljava/lang/String;	getExceptionType()Ljava/lang/String;
	f	a;;Ljava/util/List;	protectedRange;;Ljava/util/List;
	f	b;;LbT;	handler;;Lde/fernflower/code/cfg/BasicBlock;
	f	c;;Ljava/lang/String;	exceptionType;;Ljava/lang/String;
c	Laj;	Lde/fernflower/code/JumpInstruction;
	m	<init>()V	<init>()V
	m	a(LcQ;)V	initInstruction(Lde/fernflower/code/InstructionSequence;)V
		ma	0	0
	m	b()Lj;	clone()Lde/fernflower/code/Instruction;
	f	d;;I	destination;;I
c	Lak;	Lde/fernflower/modules/decompiler/decompose/IGraph;
	m	a()Ljava/util/List;	getReversePostOrderList()Ljava/util/List;
	m	b()Ljava/util/Set;	getRoots()Ljava/util/Set;
c	Lal;	Lde/fernflower/util/FastSparseSetFactory$FastSparseSetIterator;
	m	<init>(LcJ;)V	<init>(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
		ma	0	0
	m	a(I)I	getNextIndex(I)I
	m	hasNext()Z	hasNext()Z
	m	next()Ljava/lang/Object;	next()Ljava/lang/Object;
	m	remove()V	remove()V
	m	<init>(LcJ;Lal;)V	<init>(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;Lde/fernflower/util/FastSparseSetFactory$FastSparseSetIterator;)V
		ma	0	0
		ma	1	1
	f	a;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	b;;[I	data;;[I
	f	c;;[I	next;;[I
	f	d;;I	size;;I
	f	e;;I	pointer;;I
	f	f;;I	next_pointer;;I
c	Lam;	Lde/fernflower/struct/gen/FieldDescriptor;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(Ljava/lang/String;)Lam;	parseDescriptor(Ljava/lang/String;)Lde/fernflower/struct/gen/FieldDescriptor;
		ma	0	0
	m	a()Ljava/lang/String;	getDescriptor()Ljava/lang/String;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	f	a;;Lam;	INTEGER_DESCRIPTOR;;Lde/fernflower/struct/gen/FieldDescriptor;
	f	b;;Lam;	LONG_DESCRIPTOR;;Lde/fernflower/struct/gen/FieldDescriptor;
	f	c;;Lam;	FLOAT_DESCRIPTOR;;Lde/fernflower/struct/gen/FieldDescriptor;
	f	d;;Lam;	DOUBLE_DESCRIPTOR;;Lde/fernflower/struct/gen/FieldDescriptor;
	f	e;;LQ;	type;;Lde/fernflower/struct/gen/VarType;
	f	f;;Ljava/lang/String;	descriptorString;;Ljava/lang/String;
c	Lan;	Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;
	m	<init>()V	<init>()V
	m	a(Lca;)Ljava/util/HashMap;	getExtendedPostdominators(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/HashMap;
	m	a(Lbq;)V	filterOnDominance(Lde/fernflower/modules/decompiler/decompose/DominatorTreeExceptionFilter;)V
	m	b(Lbq;)V	filterOnExceptionRanges(Lde/fernflower/modules/decompiler/decompose/DominatorTreeExceptionFilter;)V
		ma	0	0
	m	a()V	removeErroneousNodes()V
	m	b()V	calcDefaultReachableSets()V
	m	a(I)V	calcReachabilitySuppPoints(I)V
		ma	0	0
	m	a(Ly;I)V	iterateReachability(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper$IReachabilityAction;I)V
		ma	0	0
		ma	1	1
	m	a(Lan;)Ljava/util/HashMap;	access$0(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;)Ljava/util/HashMap;
		ma	0	0
	m	b(Lan;)Law;	access$1(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;)Lde/fernflower/util/FastFixedSetFactory;
		ma	0	0
	m	c(Lan;)Ljava/util/HashMap;	access$2(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;)Ljava/util/HashMap;
		ma	0	0
	f	a;;Ljava/util/List;	lstReversePostOrderList;;Ljava/util/List;
	f	b;;Ljava/util/HashMap;	mapSupportPoints;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	mapExtPostdominators;;Ljava/util/HashMap;
	f	d;;Lca;	statement;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	e;;Law;	factory;;Lde/fernflower/util/FastFixedSetFactory;
c	Lao;	Lde/fernflower/modules/decompiler/exps/ExitExprent;
	m	<init>(ILaJ;LQ;)V	<init>(ILde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	f()I	getExittype()I
	m	g()LaJ;	getValue()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	h()LQ;	getRettype()Lde/fernflower/struct/gen/VarType;
	f	c;;I	exittype;;I
	f	d;;LaJ;	value;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	e;;LQ;	rettype;;Lde/fernflower/struct/gen/VarType;
c	Lap;	Lde/fernflower/code/instructions/LOOKUPSWITCH;
	m	<init>()V	<init>()V
c	Laq;	Lde/fernflower/modules/decompiler/exps/SwitchExprent;
	m	<init>(LaJ;)V	<init>(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/util/List;)V	setCaseValues(Ljava/util/List;)V
	f	c;;LaJ;	value;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	d;;Ljava/util/List;	caseValues;;Ljava/util/List;
c	Lar;	Lde/fernflower/code/optinstructions/ISTORE;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Las;	Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;
	m	<init>()V	<init>()V
	m	a(Lde;)LbD;	createNode(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Lde/fernflower/modules/decompiler/vars/VarVersionNode;
		ma	0	0
	m	a(LbD;Ljava/util/HashSet;)Z	isDominatorSet(Lde/fernflower/modules/decompiler/vars/VarVersionNode;Ljava/util/HashSet;)Z
		ma	1	1
	m	a()V	initDominators()V
	m	a(LbD;Ljava/util/List;Ljava/util/HashSet;)V	addToReversePostOrderListIterative(Lde/fernflower/modules/decompiler/vars/VarVersionNode;Ljava/util/List;Ljava/util/HashSet;)V
	m	a(Las;Ljava/util/Collection;)Ljava/util/LinkedList;	access$0(Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;Ljava/util/Collection;)Ljava/util/LinkedList;
		ma	0	0
		ma	1	1
	f	a;;LcE;	nodes;;Lde/fernflower/util/VBStyleCollection;
	f	b;;Lc;	engine;;Lde/fernflower/modules/decompiler/decompose/GenericDominatorEngine;
c	Lat;	Lde/fernflower/main/decompiler/helper/PrintStreamLogger;
	m	<init>(ILjava/io/PrintStream;)V	<init>(ILjava/io/PrintStream;)V
		ma	0	0
		ma	1	1
	m	writeMessage(Ljava/lang/String;I)V	writeMessage(Ljava/lang/String;I)V
		ma	0	0
		ma	1	1
	m	writeMessage(Ljava/lang/String;II)V	writeMessage(Ljava/lang/String;II)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	startClass(Ljava/lang/String;)V	startClass(Ljava/lang/String;)V
		ma	0	0
	m	endClass()V	endClass()V
	m	startWriteClass(Ljava/lang/String;)V	startWriteClass(Ljava/lang/String;)V
		ma	0	0
	m	endWriteClass()V	endWriteClass()V
	m	startMethod(Ljava/lang/String;)V	startMethod(Ljava/lang/String;)V
		ma	0	0
	m	endMethod()V	endMethod()V
	m	getSeverity()I	getSeverity()I
	m	setSeverity(I)V	setSeverity(I)V
		ma	0	0
	m	getShowStacktrace()Z	getShowStacktrace()Z
	f	a;;I	severity;;I
	f	b;;I	indent;;I
	f	c;;Ljava/io/PrintStream;	stream;;Ljava/io/PrintStream;
c	Lau;	Lde/fernflower/modules/decompiler/stats/DoStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;)Lca;	isHead(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	d()Ljava/util/List;	getSequentialObjects()Ljava/util/List;
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	e()Ljava/util/List;	getInitExprentList()Ljava/util/List;
	m	f()Ljava/util/List;	getConditionExprentList()Ljava/util/List;
	m	g()Ljava/util/List;	getIncExprentList()Ljava/util/List;
	m	h()LaJ;	getConditionExprent()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(LaJ;)V	setConditionExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	i()LaJ;	getIncExprent()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	b(LaJ;)V	setIncExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	j()LaJ;	getInitExprent()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	c(LaJ;)V	setInitExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	k()I	getLooptype()I
	m	b(I)V	setLooptype(I)V
		ma	0	0
	f	a;;I	looptype;;I
	f	b;;Ljava/util/List;	initExprent;;Ljava/util/List;
	f	k;;Ljava/util/List;	conditionExprent;;Ljava/util/List;
	f	l;;Ljava/util/List;	incExprent;;Ljava/util/List;
c	Lav;	Lde/fernflower/struct/gen/MethodDescriptor;
	m	<init>()V	<init>()V
	m	a(Ljava/lang/String;)Lav;	parseDescriptor(Ljava/lang/String;)Lde/fernflower/struct/gen/MethodDescriptor;
	m	a()Ljava/lang/String;	getDescriptor()Ljava/lang/String;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	f	a;;[LQ;	params;;[Lde/fernflower/struct/gen/VarType;
	f	b;;LQ;	ret;;Lde/fernflower/struct/gen/VarType;
c	Law;	Lde/fernflower/util/FastFixedSetFactory;
	m	<init>(Ljava/util/Collection;)V	<init>(Ljava/util/Collection;)V
	m	a()Lp;	spawnEmptySet()Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;
	m	a(Law;)LcE;	access$0(Lde/fernflower/util/FastFixedSetFactory;)Lde/fernflower/util/VBStyleCollection;
	m	b(Law;)I	access$1(Lde/fernflower/util/FastFixedSetFactory;)I
	f	a;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	b;;I	dataLength;;I
c	Lax;	Lde/fernflower/modules/decompiler/exps/FunctionExprent;
	m	<clinit>()V	<clinit>()V
	m	<init>(ILcb;)V	<init>(ILde/fernflower/util/ListStack;)V
		ma	0	0
		ma	1	1
	m	<init>(ILjava/util/List;)V	<init>(ILjava/util/List;)V
		ma	0	0
		ma	1	1
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	c_()I	getPrecedence()I
	mu	a	g()I
	m	h()LQ;	getSimpleCastType()Lde/fernflower/struct/gen/VarType;
	m	a(LaJ;ZI)Ljava/lang/String;	wrapOperandString(Lde/fernflower/modules/decompiler/exps/Exprent;ZI)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a([LQ;)LQ;	getMaxVarType([Lde/fernflower/struct/gen/VarType;)Lde/fernflower/struct/gen/VarType;
	m	i()I	getFunctype()I
	m	b(I)V	setFunctype(I)V
		ma	0	0
	m	j()Ljava/util/List;	getLstOperands()Ljava/util/List;
	m	a(LQ;)V	setImplicitType(Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
	f	c;;[LQ;	types;;[Lde/fernflower/struct/gen/VarType;
	f	d;;[Ljava/lang/String;	operators;;[Ljava/lang/String;
	f	e;;[I	precedence;;[I
	f	f;;Ljava/util/HashSet;	associativity;;Ljava/util/HashSet;
	f	g;;I	functype;;I
	f	h;;LQ;	implicitType;;Lde/fernflower/struct/gen/VarType;
	f	i;;Ljava/util/List;	lstOperands;;Ljava/util/List;
c	Lay;	Lde/fernflower/modules/decompiler/decompose/DominatorEngine;
	m	<init>(Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a()V	calcIDoms()V
	m	b()LcE;	getOrderedIDoms()Lde/fernflower/util/VBStyleCollection;
	m	a(Ljava/lang/Integer;Ljava/lang/Integer;)Z	isDominator(Ljava/lang/Integer;Ljava/lang/Integer;)Z
		ma	0	0
		ma	1	1
	f	a;;Lca;	statement;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;LcE;	colOrderedIDoms;;Lde/fernflower/util/VBStyleCollection;
c	Laz;	Lde/fernflower/modules/decompiler/vars/VarVersionEdge;
	m	<init>(ILbD;LbD;)V	<init>(ILde/fernflower/modules/decompiler/vars/VarVersionNode;Lde/fernflower/modules/decompiler/vars/VarVersionNode;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	f	c;;I	type;;I
	f	a;;LbD;	source;;Lde/fernflower/modules/decompiler/vars/VarVersionNode;
	f	b;;LbD;	dest;;Lde/fernflower/modules/decompiler/vars/VarVersionNode;
	f	d;;I	hashCode;;I
c	Lb;	Lde/fernflower/code/optinstructions/JSR;
	m	<init>()V	<init>()V
c	LbA;	Lde/fernflower/struct/StructField;
	m	<init>()V	<init>()V
	m	a(LbK;I)V	initStrings(Lde/fernflower/struct/consts/ConstantPool;I)V
		ma	1	1
	m	a()LcE;	getAttributes()Lde/fernflower/util/VBStyleCollection;
	m	a(LcE;)V	setAttributes(Lde/fernflower/util/VBStyleCollection;)V
		ma	0	0
	m	b()Ljava/lang/String;	getDescriptor()Ljava/lang/String;
	m	c()Ljava/lang/String;	getName()Ljava/lang/String;
	f	a;;I	access_flags;;I
	f	b;;I	name_index;;I
	f	c;;I	descriptor_index;;I
	f	d;;Ljava/lang/String;	name;;Ljava/lang/String;
	f	e;;Ljava/lang/String;	descriptor;;Ljava/lang/String;
	f	f;;LcE;	attributes;;Lde/fernflower/util/VBStyleCollection;
c	LbB;	Lde/fernflower/modules/decompiler/ExprProcessor;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(LS;LbK;)V	processStatement(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/util/LinkedList;)Ljava/lang/String;	buildEntryPointKey(Ljava/util/LinkedList;)Ljava/lang/String;
		ma	0	0
	m	a(LB;)LB;	copyVarExprents(Lde/fernflower/modules/decompiler/PrimitiveExprsList;)Lde/fernflower/modules/decompiler/PrimitiveExprsList;
		ma	0	0
	m	a(Lca;Ldd;Ljava/util/Map;)V	collectCatchVars(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper;Ljava/util/Map;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lca;)V	initStatementExprents(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lci;LB;LbK;)V	processBlock(Lde/fernflower/modules/decompiler/stats/BasicBlockStatement;Lde/fernflower/modules/decompiler/PrimitiveExprsList;Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lbs;Ljava/util/List;LaJ;)V	pushEx(Lde/fernflower/modules/decompiler/ExprentStack;Ljava/util/List;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lbs;Ljava/util/List;LaJ;LQ;)V	pushEx(Lde/fernflower/modules/decompiler/ExprentStack;Ljava/util/List;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	a(ILbs;Ljava/util/List;I)V	insertByOffsetEx(ILde/fernflower/modules/decompiler/ExprentStack;Ljava/util/List;I)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	a(LQ;)Ljava/lang/String;	getTypeName(Lde/fernflower/struct/gen/VarType;)Ljava/lang/String;
		ma	0	0
	m	b(LQ;Z)Ljava/lang/String;	getTypeName(Lde/fernflower/struct/gen/VarType;Z)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	b(LQ;)Ljava/lang/String;	getCastTypeName(Lde/fernflower/struct/gen/VarType;)Ljava/lang/String;
		ma	0	0
	m	a(LQ;Z)Ljava/lang/String;	getCastTypeName(Lde/fernflower/struct/gen/VarType;Z)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	a(Lca;IZ)Ljava/lang/String;	jmpWrapper(Lde/fernflower/modules/decompiler/stats/Statement;IZ)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/lang/String;)Ljava/lang/String;	buildJavaClassName(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/util/List;I)Ljava/lang/String;	listToJava(Ljava/util/List;I)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	c(LQ;)LbI;	getDefaultArrayValue(Lde/fernflower/struct/gen/VarType;)Lde/fernflower/modules/decompiler/exps/ConstExprent;
		ma	0	0
	m	a(LaJ;LQ;Ljava/lang/StringBuilder;IZ)Z	getCastedExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;Ljava/lang/StringBuilder;IZ)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	a(LaJ;LQ;Ljava/lang/StringBuilder;IZZ)Z	getCastedExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;Ljava/lang/StringBuilder;IZZ)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
		ma	5	5
	f	a;;Ljava/util/HashMap;	mapConsts;;Ljava/util/HashMap;
	f	b;;[LQ;	consts;;[Lde/fernflower/struct/gen/VarType;
	f	c;;[LQ;	vartypes;;[Lde/fernflower/struct/gen/VarType;
	f	d;;[LQ;	arrtypes;;[Lde/fernflower/struct/gen/VarType;
	f	f;;[I	func1;;[I
	f	g;;[I	func2;;[I
	f	h;;[I	func3;;[I
	f	i;;[I	func4;;[I
	f	j;;[I	func5;;[I
	f	k;;[I	func6;;[I
	f	l;;[I	func7;;[I
	f	m;;[I	func8;;[I
	f	n;;[I	arr_type;;[I
	f	o;;[I	negifs;;[I
	f	p;;[Ljava/lang/String;	typeNames;;[Ljava/lang/String;
	f	q;;Lce;	varProcessor;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
c	LbC;	Lde/fernflower/util/FastFixedSetFactory$FastFixedSetIterator;
	m	<init>(Lp;)V	<init>(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)V
		ma	0	0
	m	a(I)I	getNextIndex(I)I
		ma	0	0
	m	hasNext()Z	hasNext()Z
	m	next()Ljava/lang/Object;	next()Ljava/lang/Object;
	m	remove()V	remove()V
	m	<init>(Lp;LbC;)V	<init>(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;Lde/fernflower/util/FastFixedSetFactory$FastFixedSetIterator;)V
		ma	0	0
		ma	1	1
	f	a;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	b;;[I	data;;[I
	f	c;;I	size;;I
	f	d;;I	pointer;;I
	f	e;;I	next_pointer;;I
c	LbD;	Lde/fernflower/modules/decompiler/vars/VarVersionNode;
	m	<init>(II)V	<init>(II)V
		ma	0	0
		ma	1	1
	m	a()Ljava/util/List;	getPredecessors()Ljava/util/List;
	m	a(Laz;)V	removeSuccessor(Lde/fernflower/modules/decompiler/vars/VarVersionEdge;)V
		ma	0	0
	m	b(Laz;)V	removePredecessor(Lde/fernflower/modules/decompiler/vars/VarVersionEdge;)V
		ma	0	0
	m	c(Laz;)V	addSuccessor(Lde/fernflower/modules/decompiler/vars/VarVersionEdge;)V
		ma	0	0
	m	d(Laz;)V	addPredecessor(Lde/fernflower/modules/decompiler/vars/VarVersionEdge;)V
		ma	0	0
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	f	a;;I	var;;I
	f	b;;I	version;;I
	f	c;;Ljava/util/Set;	succs;;Ljava/util/Set;
	f	d;;Ljava/util/Set;	preds;;Ljava/util/Set;
	f	e;;I	flags;;I
	f	f;;LbZ;	live;;Lde/fernflower/util/SFormsFastMapDirect;
c	LbE;	Lde/fernflower/code/optinstructions/GETFIELD;
	m	<init>()V	<init>()V
c	LbF;	Lde/fernflower/code/optinstructions/GETSTATIC;
	m	<init>()V	<init>()V
c	LbG;	Lde/fernflower/code/ConstantsUtil;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(I)Ljava/lang/String;	getName(I)Ljava/lang/String;
		ma	0	0
	m	a(IZI[I)Lj;	getInstructionInstance(IZI[I)Lde/fernflower/code/Instruction;
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	b(I)Lj;	getInstructionInstance(I)Lde/fernflower/code/Instruction;
		ma	0	0
	f	a;;[Ljava/lang/String;	opcodeNames;;[Ljava/lang/String;
	f	b;;[Ljava/lang/Class;	opcodeClasses;;[Ljava/lang/Class;
c	LbH;	Lde/fernflower/modules/decompiler/vars/VarVersionsGraph$1;
	m	<init>(Las;Ljava/util/HashSet;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
	m	a()Ljava/util/List;	getReversePostOrderList()Ljava/util/List;
	m	b()Ljava/util/Set;	getRoots()Ljava/util/Set;
	f	a;;Las;	this$0;;Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;
	f	b;;Ljava/util/HashSet;	val$roots;;Ljava/util/HashSet;
c	LbI;	Lde/fernflower/modules/decompiler/exps/ConstExprent;
	m	<clinit>()V	<clinit>()V
	m	<init>(IZ)V	<init>(IZ)V
		ma	0	0
		ma	1	1
	m	<init>(LQ;Ljava/lang/Object;)V	<init>(Lde/fernflower/struct/gen/VarType;Ljava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	d_()I	getExprentUse()I
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/lang/String;)Ljava/lang/String;	convertStringToJava(Ljava/lang/String;)Ljava/lang/String;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	g()Z	hasBooleanValue()Z
	m	h()Z	hasValueOne()Z
	m	b(I)LbI;	getZeroConstant(I)Lde/fernflower/modules/decompiler/exps/ConstExprent;
		ma	0	0
	m	i()LQ;	getConsttype()Lde/fernflower/struct/gen/VarType;
	m	a(LQ;)V	setConsttype(Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
	m	j()Ljava/lang/Object;	getValue()Ljava/lang/Object;
	m	k()I	getIntValue()I
	m	l()Z	isBoolPermitted()Z
	f	c;;Ljava/util/HashMap;	escapes;;Ljava/util/HashMap;
	f	d;;LQ;	consttype;;Lde/fernflower/struct/gen/VarType;
	f	e;;Ljava/lang/Object;	value;;Ljava/lang/Object;
	f	f;;Z	boolPermitted;;Z
c	LbJ;	Lde/fernflower/modules/decompiler/vars/VarProcessor$1;
	m	<init>()V	<init>(Lde/fernflower/modules/decompiler/vars/VarProcessor;)V
	m	compare(Ljava/lang/Object;Ljava/lang/Object;)I	compare(Ljava/lang/Object;Ljava/lang/Object;)I
		ma	0	0
c	LbK;	Lde/fernflower/struct/consts/ConstantPool;
	m	<init>(Ljava/io/DataInputStream;)V	<init>(Ljava/io/DataInputStream;)V
		ma	0	0
	m	a(IIII)[Ljava/lang/String;	getClassElement(IIII)[Ljava/lang/String;
	m	c(I)Lby;	getConstant(I)Lde/fernflower/struct/consts/PooledConstant;
		ma	0	0
	m	a(I)LT;	getPrimitiveConstant(I)Lde/fernflower/struct/consts/PrimitiveConstant;
	m	b(I)Lg;	getLinkConstant(I)Lde/fernflower/struct/consts/LinkConstant;
		ma	0	0
	m	a(Ljava/lang/String;)Ljava/lang/String;	buildNewClassname(Ljava/lang/String;)Ljava/lang/String;
	m	a(ILjava/lang/String;)Ljava/lang/String;	buildNewDescriptor(ILjava/lang/String;)Ljava/lang/String;
		ma	1	1
	f	a;;Ljava/util/List;	pool;;Ljava/util/List;
	f	b;;Lu;	interceptor;;Lde/fernflower/modules/renamer/PoolInterceptor;
c	LbL;	Lde/fernflower/struct/attr/StructAnnotationAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a(Ljava/io/DataInputStream;LbK;)Lch;	parseAnnotation(Ljava/io/DataInputStream;Lde/fernflower/struct/consts/ConstantPool;)Lde/fernflower/modules/decompiler/exps/AnnotationExprent;
		ma	0	0
		ma	1	1
	m	b(Ljava/io/DataInputStream;LbK;)LaJ;	parseAnnotationElement(Ljava/io/DataInputStream;Lde/fernflower/struct/consts/ConstantPool;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	1	1
	m	a()Ljava/util/List;	getAnnotations()Ljava/util/List;
	f	c;;Ljava/util/List;	annotations;;Ljava/util/List;
c	LbM;	Lde/fernflower/struct/lazy/LazyLoader$Link;
	m	<init>(Ljava/lang/String;Ljava/lang/String;)V	<init>(ILjava/lang/String;Ljava/lang/String;)V
	f	a;;Ljava/lang/String;	externPath;;Ljava/lang/String;
	f	b;;Ljava/lang/String;	internPath;;Ljava/lang/String;
c	LbN;	Lde/fernflower/code/optinstructions/TABLESWITCH;
	m	<init>()V	<init>()V
c	LbO;	Lde/fernflower/code/optinstructions/INVOKESPECIAL;
	m	<init>()V	<init>()V
c	LbP;	Lde/fernflower/main/InitializerProcessor;
	m	<init>()V	<init>()V
	m	a(Lv;)V	extractDynamicInitializers(Lde/fernflower/main/rels/ClassWrapper;)V
		ma	0	0
	m	b(Lv;)V	liftConstructor(Lde/fernflower/main/rels/ClassWrapper;)V
		ma	0	0
	m	c(Lv;)V	hideEmptySuper(Lde/fernflower/main/rels/ClassWrapper;)V
		ma	0	0
	m	a(LaJ;LcX;)Z	isExprentIndependent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/main/rels/MethodWrapper;)Z
		ma	0	0
		ma	1	1
	m	a(Lca;)Lca;	findFirstData(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(LcR;LcX;Lv;Z)Z	isInvocationInitConstructor(Lde/fernflower/modules/decompiler/exps/InvocationExprent;Lde/fernflower/main/rels/MethodWrapper;Lde/fernflower/main/rels/ClassWrapper;Z)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
c	LbQ;	Lde/fernflower/struct/gen/generics/GenericMethodDescriptor;
	m	<init>()V	<init>()V
	f	a;;Ljava/util/List;	fparameters;;Ljava/util/List;
	f	b;;Ljava/util/List;	fbounds;;Ljava/util/List;
	f	c;;Ljava/util/List;	params;;Ljava/util/List;
	f	d;;Lw;	ret;;Lde/fernflower/struct/gen/generics/GenericType;
	f	e;;Ljava/util/List;	exceptions;;Ljava/util/List;
c	LbR;	Lde/fernflower/main/ClassWriter;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(LaK;Ljava/io/BufferedWriter;I)V	classToJava(Lde/fernflower/main/ClassesProcessor$ClassNode;Ljava/io/BufferedWriter;I)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lv;LbW;LbA;Ljava/io/BufferedWriter;I)V	fieldToJava(Lde/fernflower/main/rels/ClassWrapper;Lde/fernflower/struct/StructClass;Lde/fernflower/struct/StructField;Ljava/io/BufferedWriter;I)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	a(LaK;Lbn;Ljava/io/BufferedWriter;I)Z	methodToJava(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/struct/StructMethod;Ljava/io/BufferedWriter;I)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	a(LcE;)Ljava/util/List;	getAllAnnotations(Lde/fernflower/util/VBStyleCollection;)Ljava/util/List;
		ma	0	0
	m	b(LcE;)Ljava/util/List;	getAllParameterAnnotations(Lde/fernflower/util/VBStyleCollection;)Ljava/util/List;
		ma	0	0
	m	a(Ljava/lang/String;I)Ljava/lang/String;	getDescriptorPrintOut(Ljava/lang/String;I)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	a(LQ;)Ljava/lang/String;	getTypePrintOut(Lde/fernflower/struct/gen/VarType;)Ljava/lang/String;
		ma	0	0
	f	a;;[I	modval_class;;[I
	f	b;;[Ljava/lang/String;	modstr_class;;[Ljava/lang/String;
	f	c;;[I	modval_field;;[I
	f	d;;[Ljava/lang/String;	modstr_field;;[Ljava/lang/String;
	f	e;;[I	modval_meth;;[I
	f	f;;[Ljava/lang/String;	modstr_meth;;[Ljava/lang/String;
	f	g;;Ljava/util/HashSet;	mod_notinterface;;Ljava/util/HashSet;
	f	h;;Ljava/util/HashSet;	mod_notinterface_fields;;Ljava/util/HashSet;
	f	i;;Ljava/util/HashSet;	mod_notinterface_meth;;Ljava/util/HashSet;
	f	j;;Lx;	ref14processor;;Lde/fernflower/main/ClassReference14Processor;
	f	k;;Lu;	interceptor;;Lde/fernflower/modules/renamer/PoolInterceptor;
c	LbS;	Lde/fernflower/main/collectors/VarNamesCollector;
	m	<init>()V	<init>()V
	m	<init>(Ljava/util/HashSet;)V	<init>(Ljava/util/HashSet;)V
		ma	0	0
	m	a(Ljava/lang/String;)V	addName(Ljava/lang/String;)V
		ma	0	0
	m	a(I)Ljava/lang/String;	getFreeName(I)Ljava/lang/String;
		ma	0	0
	m	b(Ljava/lang/String;)Ljava/lang/String;	getFreeName(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	f	a;;Ljava/util/HashSet;	usedNames;;Ljava/util/HashSet;
c	LbT;	Lde/fernflower/code/cfg/BasicBlock;
	m	<init>()V	<init>()V
	m	<init>(I)V	<init>(I)V
		ma	0	0
	m	clone()Ljava/lang/Object;	clone()Ljava/lang/Object;
	m	b()Lj;	getInstruction(I)Lde/fernflower/code/Instruction;
	m	c()Lj;	getLastInstruction()Lde/fernflower/code/Instruction;
	m	a(LbT;)V	addPredecessor(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	b(LbT;)V	removePredecessor(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	c(LbT;)V	addSuccessor(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	d(LbT;)V	removeSuccessor(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	a(LbT;LbT;)V	replaceSuccessor(Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
		ma	1	1
	m	h(LbT;)V	addPredecessorException(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	i(LbT;)V	removePredecessorException(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	e(LbT;)V	addSuccessorException(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	f(LbT;)V	removeSuccessorException(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	g(LbT;)Z	isSuccessor(Lde/fernflower/code/cfg/BasicBlock;)Z
		ma	0	0
	m	a(Ljava/util/List;)V	setInstrOldOffsets(Ljava/util/List;)V
		ma	0	0
	m	a()Ljava/util/List;	getPredecessors()Ljava/util/List;
	m	d()Ljava/util/List;	getPreds()Ljava/util/List;
	m	e()LcQ;	getSeq()Lde/fernflower/code/InstructionSequence;
	m	a(LcQ;)V	setSeq(Lde/fernflower/code/InstructionSequence;)V
		ma	0	0
	m	f()Ljava/util/List;	getSuccs()Ljava/util/List;
	m	g()Ljava/util/List;	getSuccExceptions()Ljava/util/List;
	m	h()Ljava/util/List;	getPredExceptions()Ljava/util/List;
	f	a;;I	id;;I
	f	b;;I	mark;;I
	f	c;;LcQ;	seq;;Lde/fernflower/code/InstructionSequence;
	f	d;;Ljava/util/List;	preds;;Ljava/util/List;
	f	e;;Ljava/util/List;	succs;;Ljava/util/List;
	f	f;;Ljava/util/List;	instrOldOffsets;;Ljava/util/List;
	f	g;;Ljava/util/List;	predExceptions;;Ljava/util/List;
	f	h;;Ljava/util/List;	succExceptions;;Ljava/util/List;
c	LbU;	Lde/fernflower/modules/decompiler/FinallyProcessor;
	m	<init>(Lce;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarProcessor;)V
		ma	0	0
	m	a(Lbn;LS;LcI;)Z	processStatementEx(Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/code/cfg/ControlFlowGraph;)Z
	m	a(Lbn;LS;Lh;)[Ljava/lang/Object;	getFinallyInformation(Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/modules/decompiler/stats/CatchAllStatement;)[Ljava/lang/Object;
	m	a(LcI;Ljava/util/HashSet;LbT;LbT;I[Ljava/lang/Object;)V	insertSemaphore(Lde/fernflower/code/cfg/ControlFlowGraph;Ljava/util/HashSet;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;I[Ljava/lang/Object;)V
		ma	0	0
		ma	2	2
		ma	4	4
	m	a(LcI;LbT;LbT;)V	insertBlockBefore(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;)V
	m	a(Lca;)Ljava/util/HashSet;	getAllBasicBlocks(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/HashSet;
	m	a(LcI;Lh;[Ljava/lang/Object;)Z	verifyFinallyEx(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/modules/decompiler/stats/CatchAllStatement;[Ljava/lang/Object;)Z
		ma	0	0
	m	a(LcI;LbT;Ljava/util/HashSet;LbT;ILjava/util/HashMap;Z)[Ljava/lang/Object;	compareSubgraphsEx(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/code/cfg/BasicBlock;Ljava/util/HashSet;Lde/fernflower/code/cfg/BasicBlock;ILjava/util/HashMap;Z)[Ljava/lang/Object;
		ma	0	0
		ma	2	2
		ma	4	4
		ma	5	5
		ma	6	6
	m	a(LcI;Ljava/util/HashSet;)LbT;	getUniqueNext(Lde/fernflower/code/cfg/ControlFlowGraph;Ljava/util/HashSet;)Lde/fernflower/code/cfg/BasicBlock;
	m	a(LcI;LbT;LbT;IILjava/util/List;)Z	compareBasicBlocksEx(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;IILjava/util/List;)Z
	m	a(LcI;[Ljava/lang/Object;)V	deleteArea(Lde/fernflower/code/cfg/ControlFlowGraph;[Ljava/lang/Object;)V
	m	a(LbT;II)V	removeExceptionInstructionsEx(Lde/fernflower/code/cfg/BasicBlock;II)V
	f	a;;Ljava/util/HashMap;	finallyBlockIDs;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	catchallBlockIDs;;Ljava/util/HashMap;
	f	c;;Lce;	varprocessor;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
c	LbV;	Lde/fernflower/modules/decompiler/sforms/DirectGraph$ExprentIterator;
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
c	LbW;	Lde/fernflower/struct/StructClass;
	m	<init>(Ljava/io/InputStream;ZLcz;)V	<init>(Ljava/io/InputStream;ZLde/fernflower/struct/lazy/LazyLoader;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Lcw;ZLcz;)V	<init>(Lde/fernflower/util/DataInputFullStream;ZLde/fernflower/struct/lazy/LazyLoader;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/lang/String;Ljava/lang/String;)LbA;	getField(Ljava/lang/String;Ljava/lang/String;)Lde/fernflower/struct/StructField;
		ma	0	0
		ma	1	1
	m	b(Ljava/lang/String;Ljava/lang/String;)Lbn;	getMethod(Ljava/lang/String;Ljava/lang/String;)Lde/fernflower/struct/StructMethod;
		ma	0	0
		ma	1	1
	m	a(I)Ljava/lang/String;	getInterface(I)Ljava/lang/String;
		ma	0	0
	m	a()V	releaseResources()V
	m	a(Lcw;)V	initStruct(Lde/fernflower/util/DataInputFullStream;)V
		ma	0	0
	m	b(Lcw;)LcE;	readAttributes(Lde/fernflower/util/DataInputFullStream;)Lde/fernflower/util/VBStyleCollection;
	m	b()LbK;	getPool()Lde/fernflower/struct/consts/ConstantPool;
	m	c()[I	getInterfaces()[I
	m	d()[Ljava/lang/String;	getInterfaceNames()[Ljava/lang/String;
	m	e()LcE;	getMethods()Lde/fernflower/util/VBStyleCollection;
	m	f()LcE;	getFields()Lde/fernflower/util/VBStyleCollection;
	m	g()LcE;	getAttributes()Lde/fernflower/util/VBStyleCollection;
	m	h()Z	isOwn()Z
	m	i()Lcz;	getLoader()Lde/fernflower/struct/lazy/LazyLoader;
	f	a;;I	minor_version;;I
	f	b;;I	major_version;;I
	f	c;;I	access_flags;;I
	f	d;;I	this_class;;I
	f	g;;I	super_class;;I
	f	h;;LT;	thisClass;;Lde/fernflower/struct/consts/PrimitiveConstant;
	f	e;;LT;	superClass;;Lde/fernflower/struct/consts/PrimitiveConstant;
	f	f;;Ljava/lang/String;	qualifiedName;;Ljava/lang/String;
	f	i;;LbK;	pool;;Lde/fernflower/struct/consts/ConstantPool;
	f	j;;[I	interfaces;;[I
	f	k;;[Ljava/lang/String;	interfaceNames;;[Ljava/lang/String;
	f	l;;LcE;	fields;;Lde/fernflower/util/VBStyleCollection;
	f	m;;LcE;	methods;;Lde/fernflower/util/VBStyleCollection;
	f	n;;LcE;	attributes;;Lde/fernflower/util/VBStyleCollection;
	f	o;;Z	own;;Z
	f	p;;Lcz;	loader;;Lde/fernflower/struct/lazy/LazyLoader;
c	LbX;	Lde/fernflower/modules/decompiler/StrongConnectivityHelper;
	m	<init>()V	<init>()V
	m	<init>(Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lca;)Ljava/util/List;	findComponents(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/List;
		ma	0	0
	m	a(Ljava/util/List;)Z	isExitComponent(Ljava/util/List;)Z
		ma	0	0
	m	b(Ljava/util/List;)Ljava/util/List;	getExitReps(Ljava/util/List;)Ljava/util/List;
		ma	0	0
	m	b(Lca;)V	visitTree(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	c(Lca;)V	visit(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a()Ljava/util/List;	getComponents()Ljava/util/List;
	f	a;;Lcb;	lstack;;Lde/fernflower/util/ListStack;
	f	b;;I	ncounter;;I
	f	c;;Ljava/util/HashSet;	tset;;Ljava/util/HashSet;
	f	d;;Ljava/util/HashMap;	dfsnummap;;Ljava/util/HashMap;
	f	e;;Ljava/util/HashMap;	lowmap;;Ljava/util/HashMap;
	f	f;;Ljava/util/List;	components;;Ljava/util/List;
	f	g;;Ljava/util/HashSet;	setProcessed;;Ljava/util/HashSet;
c	LbY;	Lde/fernflower/code/optinstructions/ASTORE;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	LbZ;	Lde/fernflower/util/SFormsFastMapDirect;
	m	<init>()V	<init>()V
	m	<init>(Z)V	<init>(Z)V
	m	<init>(LbZ;)V	<init>(Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	0	0
	m	a()LbZ;	getCopy()Lde/fernflower/util/SFormsFastMapDirect;
	m	b()I	size()I
	m	c()Z	isEmpty()Z
	m	a(ILcJ;)V	putInternal(ILde/fernflower/util/FastSparseSetFactory$FastSparseSet;Z)V
	m	d()V	removeAllFields()V
	m	a([IIII)V	changeNext([IIII)V
	m	a(I)Z	containsKey(I)Z
		ma	0	0
	m	b(I)LcJ;	get(I)Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
		ma	0	0
	m	a(LbZ;)V	complement(Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	0	0
	m	b(LbZ;)V	intersection(Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	0	0
	m	c(LbZ;)V	union(Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	0	0
	m	e()Ljava/util/List;	entryList()Ljava/util/List;
	m	a(IIZ)[LcJ;	ensureCapacity(IIZ)[Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
		ma	0	0
	f	a;;I	size;;I
	f	b;;[[LcJ;	elements;;[[Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
	f	c;;[[I	next;;[[I
c	Lba;	Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor$2;
	m	<init>(Ljava/util/HashMap;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor;Ljava/util/HashMap;)V
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
	f	a;;Ljava/util/HashMap;	val$mapMergedVersions;;Ljava/util/HashMap;
c	Lbb;	Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor$1;
	m	<init>(Ljava/util/HashMap;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor;Ljava/util/HashMap;)V
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
	f	a;;Ljava/util/HashMap;	val$phivers;;Ljava/util/HashMap;
c	Lbc;	Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor$3;
	m	<init>(Ljava/util/HashMap;Ljava/util/HashMap;)V	<init>(Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor;Ljava/util/HashMap;Ljava/util/HashMap;)V
		ma	1	1
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
	f	a;;Ljava/util/HashMap;	val$mapVarPaar;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	val$mapExprentMaxTypes;;Ljava/util/HashMap;
c	Lbd;	Lde/fernflower/modules/decompiler/StackVarsProcessor;
	m	<init>()V	<init>()V
	m	a(LS;Lbn;)V	simplifyStackVars(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/struct/StructMethod;)V
		ma	0	0
		ma	1	1
	m	a(Lca;)V	setVersionsToNull(Lde/fernflower/modules/decompiler/stats/Statement;)V
	m	a(LaJ;)V	setExprentVersionsToNull(Lde/fernflower/modules/decompiler/exps/Exprent;)V
	m	a(LS;Ls;)Z	iterateStatements(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;)Z
		ma	1	1
	m	a(LaJ;Laa;LaJ;Ls;)V	replaceSingleVar(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/VarExprent;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;)V
		ma	3	3
	m	a(Ljava/util/List;ILaJ;Ljava/util/HashMap;Ls;)[I	iterateExprent(Ljava/util/List;ILde/fernflower/modules/decompiler/exps/Exprent;Ljava/util/HashMap;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;)[I
		ma	0	0
		ma	1	1
		ma	3	3
		ma	4	4
	m	b(LaJ;)Ljava/util/HashSet;	getAllVersions(Lde/fernflower/modules/decompiler/exps/Exprent;)Ljava/util/HashSet;
	m	a(LaJ;LaJ;LaJ;Ljava/util/HashMap;Ls;)[Ljava/lang/Object;	iterateChildExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;Ljava/util/HashMap;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;)[Ljava/lang/Object;
		ma	2	2
		ma	3	3
		ma	4	4
	m	a(Ls;Lde;Ljava/util/List;)Z	getUsedVersions(Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Ljava/util/List;)Z
	m	a(Lde;Ljava/util/HashMap;Ls;Lde;)Z	isVersionToBeReplaced(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Ljava/util/HashMap;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Z
	m	a(Lde;LaJ;Ls;)Ljava/util/HashMap;	getAllVarVersions(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;)Ljava/util/HashMap;
c	Lbe;	Lde/fernflower/code/optinstructions/CHECKCAST;
	m	<init>()V	<init>()V
c	Lbf;	Lde/fernflower/code/ExceptionTable;
	m	<init>()V	<init>()V
	m	<init>(Ljava/util/List;)V	<init>(Ljava/util/List;)V
		ma	0	0
	m	a()Ljava/util/List;	getHandlers()Ljava/util/List;
	f	a;;Ljava/util/List;	handlers;;Ljava/util/List;
c	Lbg;	Lde/fernflower/code/optinstructions/RET;
	m	<init>()V	<init>()V
c	Lbh;	Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper$3;
	m	<init>(Lan;I)V	<init>(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;I)V
		ma	0	0
		ma	1	1
	m	a(Lca;Ljava/util/HashMap;)Z	action(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
		ma	0	0
		ma	1	1
	f	a;;Lan;	this$0;;Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;
	f	b;;I	val$edgetype;;I
c	Lbi;	Lde/fernflower/struct/attr/StructExceptionsAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
	m	a(ILbK;)Ljava/lang/String;	getExcClassname(ILde/fernflower/struct/consts/ConstantPool;)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	a()Ljava/util/List;	getThrowsExceptions()Ljava/util/List;
	f	c;;Ljava/util/List;	throwsExceptions;;Ljava/util/List;
c	Lbj;	Lde/fernflower/code/IfInstruction;
	m	<init>()V	<init>()V
c	Lbk;	Lde/fernflower/code/SimpleInstructionSequence;
	m	<init>()V	<init>()V
	m	<init>(LcE;)V	<init>(Lde/fernflower/util/VBStyleCollection;)V
		ma	0	0
	m	a(I)V	removeInstruction(I)V
		ma	0	0
	m	a()LcQ;	clone()Lde/fernflower/code/InstructionSequence;
c	Lbl;	Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper$2;
	m	<init>(Lan;)V	<init>(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;)V
		ma	0	0
	m	a(Lca;Ljava/util/HashMap;)Z	action(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
	f	a;;Lan;	this$0;;Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;
c	Lbm;	Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper$1;
	m	<init>(Lan;)V	<init>(Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;)V
		ma	0	0
	m	a(Lca;Ljava/util/HashMap;)Z	action(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
	f	a;;Lan;	this$0;;Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper;
c	Lbn;	Lde/fernflower/struct/StructMethod;
	m	<clinit>()V	<clinit>()V
	m	<init>(Lcw;ZLbW;)V	<init>(Lde/fernflower/util/DataInputFullStream;ZLde/fernflower/struct/StructClass;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Lcw;ZZLbW;)V	<init>(Lde/fernflower/util/DataInputFullStream;ZZLde/fernflower/struct/StructClass;)V
		ma	0	0
		ma	1	1
	m	a(Lcw;LbK;LcE;ILjava/lang/String;)V	readAttribute(Lde/fernflower/util/DataInputFullStream;Lde/fernflower/struct/consts/ConstantPool;Lde/fernflower/util/VBStyleCollection;ILjava/lang/String;)V
	m	a()V	expandData()V
	m	b()V	releaseResources()V
	m	a(Lcw;ILbK;)LcQ;	parseBytecode(Lde/fernflower/util/DataInputFullStream;ILde/fernflower/struct/consts/ConstantPool;)Lde/fernflower/code/InstructionSequence;
	m	c()LcQ;	getInstructionSequence()Lde/fernflower/code/InstructionSequence;
	m	d()Ljava/lang/String;	getDescriptor()Ljava/lang/String;
	m	e()Ljava/lang/String;	getName()Ljava/lang/String;
	m	f()I	getAccessFlags()I
	m	g()I	getLocalVariables()I
	m	h()LcE;	getAttributes()Lde/fernflower/util/VBStyleCollection;
	m	i()LbW;	getClassStruct()Lde/fernflower/struct/StructClass;
	f	a;;I	name_index;;I
	f	b;;I	descriptor_index;;I
	f	c;;[I	opr_iconst;;[I
	f	d;;[I	opr_loadstore;;[I
	f	f;;[I	opcs_load;;[I
	f	g;;[I	opcs_store;;[I
	f	h;;I	accessFlags;;I
	f	i;;LcE;	attributes;;Lde/fernflower/util/VBStyleCollection;
	f	j;;I	localVariables;;I
	f	k;;Ljava/lang/String;	name;;Ljava/lang/String;
	f	l;;Ljava/lang/String;	descriptor;;Ljava/lang/String;
	f	m;;LcQ;	seq;;Lde/fernflower/code/InstructionSequence;
	f	n;;Z	containsCode;;Z
	f	o;;Z	own;;Z
	f	p;;LbW;	classStruct;;Lde/fernflower/struct/StructClass;
	f	q;;Z	lazy;;Z
	f	r;;Z	expanded;;Z
	f	s;;I	code_length;;I
	f	t;;I	code_fulllength;;I
c	Lbo;	Lde/fernflower/code/optinstructions/NEW;
	m	<init>()V	<init>()V
c	Lbp;	Lde/fernflower/modules/decompiler/exps/MonitorExprent;
	m	<init>(ILaJ;)V	<init>(ILde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	g()I	getMontype()I
	m	h()LaJ;	getValue()Lde/fernflower/modules/decompiler/exps/Exprent;
	f	c;;I	montype;;I
	f	d;;LaJ;	value;;Lde/fernflower/modules/decompiler/exps/Exprent;
c	Lbq;	Lde/fernflower/modules/decompiler/decompose/DominatorTreeExceptionFilter;
	m	<init>(Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a()V	initialize()V
	m	a(Ljava/lang/Integer;Ljava/lang/Integer;)Z	acceptStatementPair(Ljava/lang/Integer;Ljava/lang/Integer;)Z
		ma	0	0
		ma	1	1
	m	c()V	buildExceptionRanges()V
	m	a(Ljava/lang/Integer;)Ljava/util/Map;	buildExceptionDoms(Ljava/lang/Integer;)Ljava/util/Map;
		ma	0	0
	m	b(Ljava/lang/Integer;)V	buildFilter(Ljava/lang/Integer;)V
		ma	0	0
	m	b()Lay;	getDomEngine()Lde/fernflower/modules/decompiler/decompose/DominatorEngine;
	f	a;;Lca;	statement;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;Ljava/util/Map;	mapTreeBranches;;Ljava/util/Map;
	f	c;;Ljava/util/Map;	mapExceptionRanges;;Ljava/util/Map;
	f	d;;Ljava/util/Map;	mapExceptionDoms;;Ljava/util/Map;
	f	e;;Ljava/util/Map;	mapExceptionRangeUniqueExit;;Ljava/util/Map;
	f	f;;Lay;	domEngine;;Lde/fernflower/modules/decompiler/decompose/DominatorEngine;
c	Lbr;	Lde/fernflower/code/SwitchInstruction;
	m	<init>()V	<init>()V
	m	a(LcQ;)V	initInstruction(Lde/fernflower/code/InstructionSequence;)V
		ma	0	0
	m	d()[I	getDestinations()[I
	m	e()I	getDefaultdest()I
	m	f()[I	getValues()[I
	m	b()Lj;	clone()Lde/fernflower/code/Instruction;
	f	d;;[I	destinations;;[I
	f	f;;[I	values;;[I
	f	g;;I	defaultdest;;I
c	Lbs;	Lde/fernflower/modules/decompiler/ExprentStack;
	m	<init>()V	<init>()V
	m	<init>(Lcb;)V	<init>(Lde/fernflower/util/ListStack;)V
		ma	0	0
	m	a(LaJ;)LaJ;	push(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	m	a()LaJ;	pop()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	b()Lbs;	clone()Lde/fernflower/modules/decompiler/ExprentStack;
	m	c()Lcb;	clone()Lde/fernflower/util/ListStack;
	m	d()Ljava/lang/Object;	pop()Ljava/lang/Object;
	m	a(Ljava/lang/Object;)Ljava/lang/Object;	push(Ljava/lang/Object;)Ljava/lang/Object;
		ma	0	0
c	Lbt;	Lde/fernflower/modules/decompiler/ExitHelper;
	m	<init>()V	<init>()V
	m	a(LS;)Z	condenseExits(Lde/fernflower/modules/decompiler/stats/RootStatement;)Z
		ma	0	0
	m	a(Lca;)V	cleanUpUnreachableBlocks(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	b(Lca;)I	integrateExits(Lde/fernflower/modules/decompiler/stats/Statement;)I
		ma	0	0
	m	a(LcV;)Lca;	isExitEdge(Lde/fernflower/modules/decompiler/StatEdge;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	b(LS;)Z	removeRedundantReturns(Lde/fernflower/modules/decompiler/stats/RootStatement;)Z
		ma	0	0
c	Lbu;	Lde/fernflower/code/optinstructions/FLOAD;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lbv;	Lde/fernflower/struct/gen/generics/GenericFieldDescriptor;
	m	<init>()V	<init>()V
	f	a;;Lw;	type;;Lde/fernflower/struct/gen/generics/GenericType;
c	Lbw;	Lde/fernflower/code/instructions/MULTIANEWARRAY;
	m	<init>()V	<init>()V
cu	a	Lbx;
c	Lby;	Lde/fernflower/struct/consts/PooledConstant;
	m	<init>()V	<init>()V
	m	a(LbK;)V	resolveConstant(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	f	d;;I	type;;I
c	Lbz;	Lde/fernflower/struct/attr/StructGeneralAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a(ILjava/lang/String;)Lbz;	getMatchingAttributeInstance(ILjava/lang/String;)Lde/fernflower/struct/attr/StructGeneralAttribute;
		ma	0	0
	m	a([B)V	setInfo([B)V
		ma	0	0
	m	d()Ljava/lang/String;	getName()Ljava/lang/String;
	f	c;;I	attribute_name_index;;I
	f	a;;[B	info;;[B
	f	b;;Ljava/lang/String;	name;;Ljava/lang/String;
c	Lc;	Lde/fernflower/modules/decompiler/decompose/GenericDominatorEngine;
	m	<init>(Lak;)V	<init>(Lde/fernflower/modules/decompiler/decompose/IGraph;)V
		ma	0	0
	m	a()V	orderNodes()V
	m	a(Lah;Lah;)Z	isDominator(Lde/fernflower/modules/decompiler/decompose/IGraphNode;Lde/fernflower/modules/decompiler/decompose/IGraphNode;)Z
		ma	0	0
		ma	1	1
	f	a;;Lak;	graph;;Lde/fernflower/modules/decompiler/decompose/IGraph;
	f	b;;LcE;	colOrderedIDoms;;Lde/fernflower/util/VBStyleCollection;
	f	c;;Ljava/util/Set;	setRoots;;Ljava/util/Set;
c	LcA;	Lde/fernflower/main/rels/NestedMemberAccess;
	m	<init>()V	<init>()V
	m	a(LaK;)V	propagateMemberAccess(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
	m	b(LaK;)V	computeMethodTypes(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
	m	a(LaK;LcX;)V	computeMethodType(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/rels/MethodWrapper;)V
		ma	0	0
		ma	1	1
	m	c(LaK;)V	eliminateStaticAccess(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
	m	a(LaK;LcX;LaJ;)Z	replaceInvocations(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/rels/MethodWrapper;Lde/fernflower/modules/decompiler/exps/Exprent;)Z
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LaK;LaK;)Z	sameTree(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/ClassesProcessor$ClassNode;)Z
	m	a(LaK;LcX;LcR;)LaJ;	replaceAccessExprent(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/rels/MethodWrapper;Lde/fernflower/modules/decompiler/exps/InvocationExprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	1	1
		ma	2	2
	f	a;;Z	notSetSync;;Z
	f	b;;Ljava/util/HashMap;	mapMethodType;;Ljava/util/HashMap;
c	LcB;	Lde/fernflower/modules/decompiler/DomHelper$1;
	m	<init>(Ljava/util/HashMap;)V	<init>(Ljava/util/HashMap;)V
		ma	0	0
	m	compare(Ljava/lang/Object;Ljava/lang/Object;)I	compare(Ljava/lang/Object;Ljava/lang/Object;)I
		ma	0	0
		ma	1	1
	f	a;;Ljava/util/HashMap;	val$mapSortOrder;;Ljava/util/HashMap;
c	LcC;	Lde/fernflower/modules/decompiler/MergeHelper;
	m	<init>()V	<init>()V
	m	a(Lca;)V	enhanceLoops(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	b(Lca;)Z	matchWhile(Lde/fernflower/modules/decompiler/stats/DoStatement;)Z
	m	a(Lau;)Z	matchDoWhile(Lde/fernflower/modules/decompiler/stats/DoStatement;)Z
		ma	0	0
	m	a(Lca;Lca;)Z	isDirectPath(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
		ma	1	1
	m	b(Lau;)Z	matchFor(Lde/fernflower/modules/decompiler/stats/DoStatement;)Z
		ma	0	0
	m	a(Lau;Lca;)V	removeLastEmptyStatement(Lde/fernflower/modules/decompiler/stats/DoStatement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	c(Lca;)Lca;	getLastDirectData(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
c	LcD;	Lde/fernflower/struct/gen/generics/GenericClassDescriptor;
	m	<init>()V	<init>()V
	f	a;;Lw;	superclass;;Lde/fernflower/struct/gen/generics/GenericType;
	f	b;;Ljava/util/List;	superinterfaces;;Ljava/util/List;
	f	c;;Ljava/util/List;	fparameters;;Ljava/util/List;
	f	d;;Ljava/util/List;	fbounds;;Ljava/util/List;
c	LcE;	Lde/fernflower/util/VBStyleCollection;
	m	<init>()V	<init>()V
	m	add(Ljava/lang/Object;)Z	add(Ljava/lang/Object;)Z
		ma	0	0
	m	remove(Ljava/lang/Object;)Z	remove(Ljava/lang/Object;)Z
		ma	0	0
	m	addAll(Ljava/util/Collection;)Z	addAll(Ljava/util/Collection;)Z
		ma	0	0
	m	a(Ljava/util/Collection;Ljava/util/Collection;)V	addAllWithKey(Ljava/util/Collection;Ljava/util/Collection;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/Object;Ljava/lang/Object;)V	addWithKey(Ljava/lang/Object;Ljava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	b(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	putWithKey(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
		ma	0	0
		ma	1	1
	m	add(ILjava/lang/Object;)V	add(ILjava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	a(ILjava/lang/Object;Ljava/lang/Object;)V	addWithKeyAndIndex(ILjava/lang/Object;Ljava/lang/Object;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/lang/Object;)V	removeWithKey(Ljava/lang/Object;)V
		ma	0	0
	m	remove(I)Ljava/lang/Object;	remove(I)Ljava/lang/Object;
		ma	0	0
	m	b(Ljava/lang/Object;)Ljava/lang/Object;	getWithKey(Ljava/lang/Object;)Ljava/lang/Object;
		ma	0	0
	m	c(Ljava/lang/Object;)I	getIndexByKey(Ljava/lang/Object;)I
		ma	0	0
	m	a()Ljava/lang/Object;	getLast()Ljava/lang/Object;
	m	d(Ljava/lang/Object;)Z	containsKey(Ljava/lang/Object;)Z
		ma	0	0
	m	clear()V	clear()V
	m	b()LcE;	clone()Lde/fernflower/util/VBStyleCollection;
	m	a(I)Ljava/lang/Object;	getKey(I)Ljava/lang/Object;
		ma	0	0
	m	c()Ljava/util/ArrayList;	getLstKeys()Ljava/util/ArrayList;
	m	a(II)V	addToListIndex(II)V
		ma	0	0
		ma	1	1
	m	clone()Ljava/lang/Object;	clone()Ljava/lang/Object;
	f	a;;Ljava/util/HashMap;	map;;Ljava/util/HashMap;
	f	b;;Ljava/util/ArrayList;	lstKeys;;Ljava/util/ArrayList;
c	LcF;	Lde/fernflower/modules/decompiler/sforms/DirectNode;
	m	<init>(ILca;Ljava/lang/String;)V	<init>(ILde/fernflower/modules/decompiler/stats/Statement;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Lca;Lci;)V	<init>(ILde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/BasicBlockStatement;)V
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	f	a;;I	type;;I
	f	b;;Ljava/lang/String;	id;;Ljava/lang/String;
	f	c;;Lci;	block;;Lde/fernflower/modules/decompiler/stats/BasicBlockStatement;
	f	d;;Lca;	statement;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	e;;Ljava/util/List;	exprents;;Ljava/util/List;
	f	f;;Ljava/util/List;	succs;;Ljava/util/List;
	f	g;;Ljava/util/List;	preds;;Ljava/util/List;
c	LcG;	Lde/fernflower/main/ClassesProcessor;
	m	<init>(Li;)V	<init>(Lde/fernflower/struct/StructContext;)V
		ma	0	0
	m	a(LbW;Ljava/io/BufferedWriter;)V	writeClass(Lde/fernflower/struct/StructContext;Lde/fernflower/struct/StructClass;Ljava/io/BufferedWriter;)V
	m	a(LaK;)V	initWrappers(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
	m	a(LaK;LcL;)V	addClassnameToImport(Lde/fernflower/main/ClassesProcessor$ClassNode;Lde/fernflower/main/collectors/ImportCollector;)V
		ma	0	0
		ma	1	1
	m	b(LaK;)V	destroyWrappers(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
	m	a()Ljava/util/HashMap;	getMapRootClasses()Ljava/util/HashMap;
	f	a;;Ljava/util/HashMap;	mapRootClasses;;Ljava/util/HashMap;
c	LcH;	Lde/fernflower/modules/decompiler/IfHelper;
	m	<init>()V	<init>()V
	m	a(LS;)Z	mergeAllIfs(Lde/fernflower/modules/decompiler/stats/RootStatement;)Z
		ma	0	0
	m	b(Lca;Ljava/util/HashSet;)Z	mergeAllIfsRec(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)Z
		ma	0	0
		ma	1	1
	m	a(Lca;Ljava/util/HashSet;)Z	mergeIfs(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)Z
	m	a(Lcy;)Z	collapseElse(Lde/fernflower/modules/decompiler/IfHelper$IfNode;)Z
		ma	0	0
	m	a(LG;)Z	reorderIf(Lde/fernflower/modules/decompiler/stats/IfStatement;)Z
		ma	0	0
	m	a(Lca;Lca;)Z	hasDirectEndEdge(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	1	1
	m	a(Lca;)Lca;	getNextStatement(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	b(Lca;Lca;)Z	existsPath(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
c	LcI;	Lde/fernflower/code/cfg/ControlFlowGraph;
	m	<init>(LcQ;)V	<init>(Lde/fernflower/code/InstructionSequence;)V
		ma	0	0
	m	g()V	removeMarkers()V
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	a(Lbn;)V	inlineJsr(Lde/fernflower/struct/StructMethod;)V
		ma	0	0
	m	a(LbT;)V	removeBlock(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	a(LbT;LbT;)Lai;	getExceptionRange(Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;)Lde/fernflower/code/cfg/ExceptionRangeCFG;
		ma	0	0
		ma	1	1
	m	a(LcQ;)[S	findStartInstructions(Lde/fernflower/code/InstructionSequence;)[S
		ma	0	0
	m	a([SLcQ;Ljava/util/HashMap;)LcE;	createBasicBlocks([SLde/fernflower/code/InstructionSequence;Ljava/util/HashMap;)Lde/fernflower/util/VBStyleCollection;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/util/List;Ljava/util/HashMap;)V	connectBlocks(Ljava/util/List;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
	m	a(LcQ;Ljava/util/HashMap;)V	setExceptionEdges(Lde/fernflower/code/InstructionSequence;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
	m	h()V	setSubroutineEdges()V
	m	b(LbT;LbT;)Ljava/util/HashSet;	getJsrRange(Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;)Ljava/util/HashSet;
		ma	0	0
		ma	1	1
	m	a(LbT;LbT;Ljava/util/HashSet;)V	splitJsrRange(Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/util/HashSet;Ljava/util/HashMap;)V	splitJsrExceptionRanges(Ljava/util/HashSet;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
	m	a(LbK;LbT;LaR;)V	removeJsrInstructions(Lde/fernflower/struct/consts/ConstantPool;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/struct/gen/DataPoint;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	i()V	setFirstAndLastBlocks()V
	m	a()Ljava/util/List;	getReversePostOrder()Ljava/util/List;
	m	a(LbT;Ljava/util/List;)V	addToReversePostOrderListIterative(Lde/fernflower/code/cfg/BasicBlock;Ljava/util/List;)V
		ma	0	0
		ma	1	1
	m	b()LcE;	getBlocks()Lde/fernflower/util/VBStyleCollection;
	m	c()LbT;	getFirst()Lde/fernflower/code/cfg/BasicBlock;
	m	b(LbT;)V	setFirst(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	d()Ljava/util/List;	getExceptions()Ljava/util/List;
	m	e()LbT;	getLast()Lde/fernflower/code/cfg/BasicBlock;
	m	f()Ljava/util/HashSet;	getFinallyExits()Ljava/util/HashSet;
	f	a;;I	last_id;;I
	f	b;;LcE;	blocks;;Lde/fernflower/util/VBStyleCollection;
	f	c;;LbT;	first;;Lde/fernflower/code/cfg/BasicBlock;
	f	d;;LbT;	last;;Lde/fernflower/code/cfg/BasicBlock;
	f	f;;Ljava/util/List;	exceptions;;Ljava/util/List;
	f	g;;Ljava/util/HashMap;	subroutines;;Ljava/util/HashMap;
	f	h;;Ljava/util/HashSet;	finallyExits;;Ljava/util/HashSet;
c	LcJ;	Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
	m	<init>(LcM;)V	<init>(Lde/fernflower/util/FastSparseSetFactory;)V
	m	<init>(LcM;[I[I)V	<init>(Lde/fernflower/util/FastSparseSetFactory;[I[I)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()LcJ;	getCopy()Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
	m	a(I)[I	ensureCapacity(I)[I
	m	a(Ljava/lang/Object;)V	add(Ljava/lang/Object;)V
		ma	0	0
	m	b(Ljava/lang/Object;)V	remove(Ljava/lang/Object;)V
	m	c(Ljava/lang/Object;)Z	contains(Ljava/lang/Object;)Z
		ma	0	0
	m	a([IIII)V	changeNext([IIII)V
	m	a(LcJ;)V	union(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
	m	b(LcJ;)V	intersection(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
	m	c(LcJ;)V	complement(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	b()I	getCardinality()I
	m	c()Z	isEmpty()Z
	m	iterator()Ljava/util/Iterator;	iterator()Ljava/util/Iterator;
	m	d()LcM;	getFactory()Lde/fernflower/util/FastSparseSetFactory;
	m	d(LcJ;)[I	access$0(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)[I
	m	e(LcJ;)[I	access$1(Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)[I
	m	<init>(LcM;LcJ;)V	<init>(Lde/fernflower/util/FastSparseSetFactory;Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
		ma	0	0
		ma	1	1
	f	a;;LcM;	factory;;Lde/fernflower/util/FastSparseSetFactory;
	f	b;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	c;;[I	data;;[I
	f	d;;[I	next;;[I
c	LcK;	Lde/fernflower/struct/attr/StructAnnotationParameterAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a()Ljava/util/List;	getParamAnnotations()Ljava/util/List;
	f	c;;Ljava/util/List;	paramAnnotations;;Ljava/util/List;
c	LcL;	Lde/fernflower/main/collectors/ImportCollector;
	m	<init>(LaK;)V	<init>(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
		ma	0	0
	m	a(Ljava/lang/String;Z)Ljava/lang/String;	getShortName(Ljava/lang/String;Z)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	a(Ljava/io/BufferedWriter;)V	writeImports(Ljava/io/BufferedWriter;)V
		ma	0	0
	f	a;;Ljava/util/HashMap;	mapSimpleNames;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashSet;	setNotImportedNames;;Ljava/util/HashSet;
	f	c;;Ljava/lang/String;	currentPackageSlash;;Ljava/lang/String;
	f	d;;Ljava/lang/String;	currentPackagePoint;;Ljava/lang/String;
c	LcM;	Lde/fernflower/util/FastSparseSetFactory;
	m	<init>(Ljava/util/Collection;)V	<init>(Ljava/util/Collection;)V
	m	a()LcJ;	spawnEmptySet()Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
	m	b()I	getLastBlock()I
	m	a(LcM;)LcE;	access$0(Lde/fernflower/util/FastSparseSetFactory;)Lde/fernflower/util/VBStyleCollection;
	m	a(LcM;Ljava/lang/Object;)[I	access$1(Lde/fernflower/util/FastSparseSetFactory;Ljava/lang/Object;)[I
	f	a;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	b;;I	lastBlock;;I
	f	c;;I	lastMask;;I
c	LcN;	Lde/fernflower/modules/decompiler/ConcatenationHelper;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(LaJ;)LaJ;	contractStringConcat(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	f	a;;LQ;	builderType;;Lde/fernflower/struct/gen/VarType;
	f	b;;LQ;	bufferType;;Lde/fernflower/struct/gen/VarType;
c	LcO;	Lde/fernflower/modules/decompiler/SecondaryFunctionsHelper;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(Lca;)Z	identifySecondaryFunctions(Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
	m	b(LaJ;)LaJ;	identifySecondaryFunctions(Lde/fernflower/modules/decompiler/exps/Exprent;Z)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	m	a(LaJ;)LaJ;	propagateBoolNot(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
	f	a;;[I	funcsnot;;[I
	f	b;;Ljava/util/HashMap;	mapNumComparisons;;Ljava/util/HashMap;
c	LcP;	Lde/fernflower/util/InterpreterUtil;
	m	<init>()V	<init>()V
	m	a(Ljava/io/File;Ljava/io/File;)V	copyFile(Ljava/io/File;Ljava/io/File;)V
	m	a(Ljava/io/InputStream;Ljava/io/OutputStream;)V	copyInputStream(Ljava/io/InputStream;Ljava/io/OutputStream;)V
		ma	0	0
		ma	1	1
	m	a(I)Ljava/lang/String;	getIndentString(I)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/lang/Object;Ljava/lang/Object;)Z	equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z
		ma	0	0
		ma	1	1
	m	a([Ljava/lang/Object;[Ljava/lang/Object;)Z	equalObjectArrays([Ljava/lang/Object;[Ljava/lang/Object;)Z
		ma	0	0
		ma	1	1
	m	a(Ljava/util/List;Ljava/util/List;)Z	equalLists(Ljava/util/List;Ljava/util/List;)Z
		ma	0	0
		ma	1	1
	m	b(I)Ljava/lang/String;	charToUnicodeLiteral(I)Ljava/lang/String;
	m	a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	makeUniqueKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
c	LcQ;	Lde/fernflower/code/InstructionSequence;
	m	<init>()V	<init>()V
	m	a()LcQ;	clone()Lde/fernflower/code/InstructionSequence;
	m	b()V	clear()V
	m	a(Lj;I)V	addInstruction(Lde/fernflower/code/Instruction;I)V
		ma	0	0
		ma	1	1
	mu	a	a(Lj;)V
	m	a(I)V	removeInstruction(I)V
		ma	0	0
	m	b(I)Lj;	getInstr(I)Lde/fernflower/code/Instruction;
		ma	0	0
	m	c()Lj;	getLastInstr()Lde/fernflower/code/Instruction;
	m	c(I)I	getOffset(I)I
		ma	0	0
	m	d(I)I	getPointerByAbsOffset(I)I
		ma	0	0
	m	e(I)I	getPointerByRelOffset(I)I
		ma	0	0
	m	d()I	length()I
	m	e()Z	isEmpty()Z
	m	f()V	addToPointer(I)V
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	f(I)Ljava/lang/String;	toString(I)Ljava/lang/String;
		ma	0	0
	m	g()I	getPointer()I
	m	g(I)V	setPointer(I)V
		ma	0	0
	m	h()Lbf;	getExceptionTable()Lde/fernflower/code/ExceptionTable;
	m	clone()Ljava/lang/Object;	clone()Ljava/lang/Object;
	f	a;;LcE;	collinstr;;Lde/fernflower/util/VBStyleCollection;
	f	c;;I	pointer;;I
	f	b;;Lbf;	exceptionTable;;Lde/fernflower/code/ExceptionTable;
c	LcR;	Lde/fernflower/modules/decompiler/exps/InvocationExprent;
	m	<init>()V	<init>()V
	m	<init>(ILg;Lcb;)V	<init>(ILde/fernflower/struct/consts/LinkConstant;Lde/fernflower/util/ListStack;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(LcR;)V	<init>(Lde/fernflower/modules/decompiler/exps/InvocationExprent;)V
		ma	0	0
	m	c()LQ;	getExprType()Lde/fernflower/struct/gen/VarType;
	m	e()LaM;	checkExprTypeBounds()Lde/fernflower/modules/decompiler/vars/CheckTypesResult;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	r()Ljava/util/Set;	getAmbiguousParameters()Ljava/util/Set;
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	g()Ljava/util/List;	getLstParameters()Ljava/util/List;
	m	a(Ljava/util/List;)V	setLstParameters(Ljava/util/List;)V
		ma	0	0
	m	h()Lav;	getDescriptor()Lde/fernflower/struct/gen/MethodDescriptor;
	m	a(Lav;)V	setDescriptor(Lde/fernflower/struct/gen/MethodDescriptor;)V
		ma	0	0
	m	i()Ljava/lang/String;	getClassname()Ljava/lang/String;
	m	a(Ljava/lang/String;)V	setClassname(Ljava/lang/String;)V
		ma	0	0
	m	j()I	getFunctype()I
	m	k()V	setFunctype(I)V
	m	l()LaJ;	getInstance()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(LaJ;)V	setInstance(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	m()Z	isStatic()Z
	m	n()V	setStatic(Z)V
	m	o()Ljava/lang/String;	getName()Ljava/lang/String;
	m	b(Ljava/lang/String;)V	setName(Ljava/lang/String;)V
		ma	0	0
	m	q()Ljava/lang/String;	getStringDescriptor()Ljava/lang/String;
	m	c(Ljava/lang/String;)V	setStringDescriptor(Ljava/lang/String;)V
		ma	0	0
	f	c;;Ljava/lang/String;	name;;Ljava/lang/String;
	f	d;;Ljava/lang/String;	classname;;Ljava/lang/String;
	f	e;;Z	isStatic;;Z
	f	f;;I	functype;;I
	f	g;;LaJ;	instance;;Lde/fernflower/modules/decompiler/exps/Exprent;
	f	h;;Lav;	descriptor;;Lde/fernflower/struct/gen/MethodDescriptor;
	f	i;;Ljava/lang/String;	stringDescriptor;;Ljava/lang/String;
	f	j;;I	invocationTyp;;I
	f	k;;Ljava/util/List;	lstParameters;;Ljava/util/List;
c	LcS;	Lde/fernflower/struct/gen/generics/GenericMain;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
	m	a(Ljava/lang/String;)LcD;	parseClassSignature(Ljava/lang/String;)Lde/fernflower/struct/gen/generics/GenericClassDescriptor;
		ma	0	0
	m	b(Ljava/lang/String;)Lbv;	parseFieldSignature(Ljava/lang/String;)Lde/fernflower/struct/gen/generics/GenericFieldDescriptor;
		ma	0	0
	m	c(Ljava/lang/String;)LbQ;	parseMethodSignature(Ljava/lang/String;)Lde/fernflower/struct/gen/generics/GenericMethodDescriptor;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/lang/String;	parseFormalParameters(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lw;)Ljava/lang/String;	getTypeName(Lde/fernflower/struct/gen/generics/GenericType;)Ljava/lang/String;
		ma	0	0
	m	b(Lw;)Ljava/lang/String;	buildJavaClassName(Lde/fernflower/struct/gen/generics/GenericType;)Ljava/lang/String;
		ma	0	0
	f	a;;[Ljava/lang/String;	typeNames;;[Ljava/lang/String;
c	LcT;	Lde/fernflower/struct/attr/StructInnerClassesAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a()Ljava/util/List;	getClassentries()Ljava/util/List;
	m	b()Ljava/util/List;	getStringentries()Ljava/util/List;
	f	c;;Ljava/util/List;	classentries;;Ljava/util/List;
	f	d;;Ljava/util/List;	stringentries;;Ljava/util/List;
c	LcU;	Lde/fernflower/modules/decompiler/LoopExtractHelper;
	m	<init>()V	<init>()V
	m	a(Lca;)Z	extractLoops(Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
	m	b(Lca;)I	extractLoopsRec(Lde/fernflower/modules/decompiler/stats/Statement;)I
	m	a(Lau;Lca;Lca;)Z	isExternStatement(Lde/fernflower/modules/decompiler/stats/DoStatement;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lau;LG;)V	extractIfBlock(Lde/fernflower/modules/decompiler/stats/DoStatement;Lde/fernflower/modules/decompiler/stats/IfStatement;)V
		ma	0	0
		ma	1	1
c	LcV;	Lde/fernflower/modules/decompiler/StatEdge;
	m	<clinit>()V	<clinit>()V
	m	<init>(ILca;Lca;Lca;)V	<init>(ILde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	<init>(ILca;Lca;)V	<init>(ILde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Lca;Lca;Ljava/lang/String;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()I	getType()I
	m	a(I)V	setType(I)V
		ma	0	0
	m	b()Lca;	getSource()Lde/fernflower/modules/decompiler/stats/Statement;
	m	a(Lca;)V	setSource(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	c()Lca;	getDestination()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b(Lca;)V	setDestination(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	d()Ljava/lang/String;	getException()Ljava/lang/String;
	f	a;;[I	TYPES;;[I
	f	e;;I	type;;I
	f	f;;Lca;	source;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	g;;Lca;	destination;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	h;;Ljava/lang/String;	exception;;Ljava/lang/String;
	f	b;;Lca;	closure;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	c;;Z	labeled;;Z
	f	d;;Z	explicit;;Z
c	LcW;	Lde/fernflower/modules/decompiler/stats/CatchStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;Lca;Ljava/util/HashSet;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lca;)Lca;	isHead(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	e()Ljava/util/List;	getVars()Ljava/util/List;
	f	a;;Ljava/util/List;	exctstrings;;Ljava/util/List;
	f	b;;Ljava/util/List;	vars;;Ljava/util/List;
c	LcX;	Lde/fernflower/main/rels/MethodWrapper;
	m	<init>(LS;Lce;Lbn;LaI;)V	<init>(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/modules/decompiler/vars/VarProcessor;Lde/fernflower/struct/StructMethod;Lde/fernflower/main/collectors/CounterContainer;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	a()Lq;	getOrBuildGraph()Lde/fernflower/modules/decompiler/sforms/DirectGraph;
	f	a;;LS;	root;;Lde/fernflower/modules/decompiler/stats/RootStatement;
	f	b;;Lce;	varproc;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
	f	c;;Lbn;	methodStruct;;Lde/fernflower/struct/StructMethod;
	f	d;;LaI;	counter;;Lde/fernflower/main/collectors/CounterContainer;
	f	h;;Lq;	graph;;Lde/fernflower/modules/decompiler/sforms/DirectGraph;
	f	e;;Ljava/util/List;	signatureFields;;Ljava/util/List;
	f	f;;Z	decompiledWithErrors;;Z
	f	g;;Ljava/util/HashSet;	setOuterVarNames;;Ljava/util/HashSet;
c	LcY;	Lde/fernflower/code/optinstructions/ANEWARRAY;
	m	<init>()V	<init>()V
c	LcZ;	Lde/fernflower/struct/ContextUnit;
	m	<init>(ILjava/lang/String;Ljava/lang/String;ZLde/fernflower/main/extern/IDecompilatSaver;Lcl;)V	<init>(ILjava/lang/String;Ljava/lang/String;ZLde/fernflower/main/extern/IDecompilatSaver;Lde/fernflower/struct/IDecompiledData;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	a(LbW;Ljava/lang/String;)V	addClass(Lde/fernflower/struct/StructClass;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/String;)V	addDirEntry(Ljava/lang/String;)V
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;)V	addOtherEntry(Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
	m	a(Lcz;)V	reload(Lde/fernflower/struct/lazy/LazyLoader;)V
		ma	0	0
	m	a()V	save()V
	m	a(Ljava/util/jar/Manifest;)V	setManifest(Ljava/util/jar/Manifest;)V
		ma	0	0
	m	b()Z	isOwn()Z
	m	c()Ljava/util/List;	getClasses()Ljava/util/List;
	f	a;;I	type;;I
	f	b;;Ljava/lang/String;	archivepath;;Ljava/lang/String;
	f	c;;Ljava/lang/String;	filename;;Ljava/lang/String;
	f	d;;Ljava/util/List;	classes;;Ljava/util/List;
	f	e;;Ljava/util/List;	classentries;;Ljava/util/List;
	f	f;;Ljava/util/List;	direntries;;Ljava/util/List;
	f	g;;Ljava/util/List;	otherentries;;Ljava/util/List;
	f	h;;Ljava/util/jar/Manifest;	manifest;;Ljava/util/jar/Manifest;
	f	i;;Lde/fernflower/main/extern/IDecompilatSaver;	decompilatSaver;;Lde/fernflower/main/extern/IDecompilatSaver;
	f	j;;Lcl;	decompiledData;;Lde/fernflower/struct/IDecompiledData;
	f	k;;Z	own;;Z
c	Lca;	Lde/fernflower/modules/decompiler/stats/Statement;
	m	<init>()V	<init>()V
	m	l()V	clearTempInformation()V
	m	d(Lca;)V	collapseNodesToStatement(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	m()V	setAllParent()V
	m	c(LcV;)V	addLabeledEdge(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	b(ILcV;I)V	addEdgeDirectInternal(ILde/fernflower/modules/decompiler/StatEdge;I)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(ILcV;)V	addEdgeInternal(ILde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
		ma	1	1
	m	c(ILcV;I)V	removeEdgeDirectInternal(ILde/fernflower/modules/decompiler/StatEdge;I)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	b(ILcV;)V	removeEdgeInternal(ILde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
		ma	1	1
	m	d(LcV;)V	addPredecessor(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	e(LcV;)V	removePredecessor(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	f(LcV;)V	addSuccessor(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	g(LcV;)V	removeSuccessor(Lde/fernflower/modules/decompiler/StatEdge;)V
		ma	0	0
	m	e(Lca;)V	removeAllSuccessors(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	n()Ljava/util/HashSet;	buildContinueSet()Ljava/util/HashSet;
	m	o()V	buildMonitorFlags()V
	m	p()Ljava/util/List;	getReversePostOrderList()Ljava/util/List;
	m	a(Ljava/util/List;)Ljava/util/List;	getPostReversePostOrderList(Ljava/util/List;)Ljava/util/List;
	m	f(Lca;)Z	containsStatement(Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
	m	g(Lca;)Z	containsStatementStrict(Lde/fernflower/modules/decompiler/stats/Statement;)Z
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	d()Ljava/util/List;	getSequentialObjects()Ljava/util/List;
	m	e_()V	initExprents()V
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b()V	initSimpleCopy()V
	m	a(Lca;Lca;)V	replaceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a(Lca;Ljava/util/List;)V	addToReversePostOrderListIterative(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/List;)V
	m	a(Lca;Ljava/util/List;Ljava/util/HashSet;)V	addToPostReversePostOrderList(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/List;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(ILcV;Lca;)V	changeEdgeNode(ILde/fernflower/modules/decompiler/StatEdge;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	1	1
		ma	2	2
	m	a(ILcV;I)V	changeEdgeType(ILde/fernflower/modules/decompiler/StatEdge;I)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	c(II)Ljava/util/List;	getEdges(II)Ljava/util/List;
		ma	0	0
	m	a(II)Ljava/util/List;	getNeighbours(II)Ljava/util/List;
		ma	0	0
	m	b(II)Ljava/util/Set;	getNeighboursSet(II)Ljava/util/Set;
		ma	0	0
		ma	1	1
	m	c(I)Ljava/util/List;	getSuccessorEdges(I)Ljava/util/List;
		ma	0	0
	m	d(I)Ljava/util/List;	getPredecessorEdges(I)Ljava/util/List;
		ma	0	0
	m	q()Ljava/util/List;	getAllSuccessorEdges()Ljava/util/List;
	m	r()Ljava/util/List;	getAllPredecessorEdges()Ljava/util/List;
	m	s()Lca;	getFirst()Lde/fernflower/modules/decompiler/stats/Statement;
	m	h(Lca;)V	setFirst(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	t()LcE;	getStats()Lde/fernflower/util/VBStyleCollection;
	m	u()I	getLastBasicType()I
	m	v()Ljava/util/HashSet;	getContinueSet()Ljava/util/HashSet;
	m	w()Z	isContainsMonitorExit()Z
	m	x()Z	isMonitorEnter()Z
	m	y()Lci;	getBasichead()Lde/fernflower/modules/decompiler/stats/BasicBlockStatement;
	m	z()Z	isLabeled()Z
	m	A()Z	hasBasicSuccEdge()Z
	m	B()Lca;	getParent()Lde/fernflower/modules/decompiler/stats/Statement;
	m	i(Lca;)V	setParent(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	C()Ljava/util/HashSet;	getLabelEdges()Ljava/util/HashSet;
	m	D()Ljava/util/List;	getVarDefinitions()Ljava/util/List;
	m	E()Ljava/util/List;	getExprents()Ljava/util/List;
	m	b(Ljava/util/List;)V	setExprents(Ljava/util/List;)V
		ma	0	0
	m	F()Z	isCopied()Z
	m	G()V	setCopied(Z)V
	f	c;;I	type;;I
	f	d;;Ljava/lang/Integer;	id;;Ljava/lang/Integer;
	f	a;;Ljava/util/Map;	mapSuccEdges;;Ljava/util/Map;
	f	b;;Ljava/util/Map;	mapPredEdges;;Ljava/util/Map;
	f	k;;Ljava/util/Map;	mapSuccStates;;Ljava/util/Map;
	f	l;;Ljava/util/Map;	mapPredStates;;Ljava/util/Map;
	f	e;;LcE;	stats;;Lde/fernflower/util/VBStyleCollection;
	f	m;;Lca;	parent;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	f;;Lca;	first;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	g;;Ljava/util/List;	exprents;;Ljava/util/List;
	f	n;;Ljava/util/HashSet;	labelEdges;;Ljava/util/HashSet;
	f	h;;Ljava/util/List;	varDefinitions;;Ljava/util/List;
	f	o;;Z	copied;;Z
	f	i;;Lca;	post;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	j;;I	lastBasicType;;I
	f	p;;Z	isMonitorEnter;;Z
	f	q;;Z	containsMonitorExit;;Z
	f	r;;Ljava/util/HashSet;	continueSet;;Ljava/util/HashSet;
c	Lcb;	Lde/fernflower/util/ListStack;
	m	<init>()V	<init>()V
	m	<init>(Ljava/util/ArrayList;)V	<init>(Ljava/util/ArrayList;)V
		ma	0	0
	m	c()Lcb;	clone()Lde/fernflower/util/ListStack;
	m	a(Ljava/lang/Object;)Ljava/lang/Object;	push(Ljava/lang/Object;)Ljava/lang/Object;
		ma	0	0
	m	d()Ljava/lang/Object;	pop()Ljava/lang/Object;
	m	a(I)Ljava/lang/Object;	pop(I)Ljava/lang/Object;
		ma	0	0
	m	b(I)V	removeMultiple(I)V
		ma	0	0
	m	e()I	getPointer()I
	m	get(I)Ljava/lang/Object;	get(I)Ljava/lang/Object;
		ma	0	0
	m	set(ILjava/lang/Object;)Ljava/lang/Object;	set(ILjava/lang/Object;)Ljava/lang/Object;
		ma	0	0
		ma	1	1
	m	c(I)Ljava/lang/Object;	getByOffset(I)Ljava/lang/Object;
		ma	0	0
	m	a(ILjava/lang/Object;)V	insertByOffset(ILjava/lang/Object;)V
		ma	0	0
		ma	1	1
	m	clear()V	clear()V
	m	clone()Ljava/lang/Object;	clone()Ljava/lang/Object;
	f	a;;I	pointer;;I
c	Lcc;	Lde/fernflower/main/EnumProcessor;
	m	<init>()V	<init>()V
	m	a(Lv;)V	clearEnum(Lde/fernflower/main/rels/ClassWrapper;)V
		ma	0	0
	m	a(Lca;)Lca;	findFirstData(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
c	Lcd;	Lde/fernflower/code/optinstructions/FSTORE;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lce;	Lde/fernflower/modules/decompiler/vars/VarProcessor;
	m	<init>()V	<init>()V
	m	a(LS;)V	setVarVersions(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
		ma	0	0
	m	a(Lca;)V	setVarDefinitions(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Ljava/util/HashMap;)V	setDebugVarNames(Ljava/util/HashMap;)V
		ma	0	0
	m	a(LbS;)V	refreshVarNames(Lde/fernflower/main/collectors/VarNamesCollector;)V
		ma	0	0
	m	a(Lde;)LQ;	getVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Lde/fernflower/struct/gen/VarType;
		ma	0	0
	m	a(Lde;LQ;)V	setVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
	m	b(Lde;)Ljava/lang/String;	getVarName(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Ljava/lang/String;
		ma	0	0
	m	a(Lde;Ljava/lang/String;)V	setVarName(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
	m	c(Lde;)I	getVarFinal(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)I
		ma	0	0
	m	d(Lde;)V	setVarFinal(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;I)V
		ma	0	0
	m	a()Ljava/util/HashMap;	getThisvars()Ljava/util/HashMap;
	m	b()Ljava/util/HashSet;	getExternvars()Ljava/util/HashSet;
	f	a;;Ljava/util/HashMap;	mapVarNames;;Ljava/util/HashMap;
	f	b;;Ld;	varvers;;Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor;
	f	c;;Ljava/util/HashMap;	thisvars;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashSet;	externvars;;Ljava/util/HashSet;
c	Lcf;	Lde/fernflower/modules/decompiler/PPandMMHelper;
	m	<init>()V	<init>()V
	m	a(LS;)Z	findPPandMM(Lde/fernflower/modules/decompiler/stats/RootStatement;)Z
	m	a(Ljava/util/List;)Z	processExprentList(Ljava/util/List;)Z
		ma	0	0
	m	a(LaJ;)LaJ;	processExprentRecursive(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	f	a;;Z	exprentReplaced;;Z
c	Lcg;	Lde/fernflower/modules/decompiler/deobfuscator/ExceptionDeobfuscator;
	m	<init>()V	<init>()V
	m	a(LcI;)V	restorePopRanges(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	b(LcI;)V	insertEmptyExceptionHandlerBlocks(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	c(LcI;)V	removeEmptyRanges(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	d(LcI;)V	removeCircularRanges(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	e(LcI;)Z	hasObfuscatedExceptions(Lde/fernflower/code/cfg/ControlFlowGraph;)Z
c	Lch;	Lde/fernflower/modules/decompiler/exps/AnnotationExprent;
	m	<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V	<init>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	g()I	getAnnotationType()I
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	h()Ljava/lang/String;	getClassname()Ljava/lang/String;
	f	c;;Ljava/lang/String;	classname;;Ljava/lang/String;
	f	d;;Ljava/util/List;	parnames;;Ljava/util/List;
	f	e;;Ljava/util/List;	parvalues;;Ljava/util/List;
c	Lci;	Lde/fernflower/modules/decompiler/stats/BasicBlockStatement;
	m	<init>(LbT;)V	<init>(Lde/fernflower/code/cfg/BasicBlock;)V
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	e()LbT;	getBlock()Lde/fernflower/code/cfg/BasicBlock;
	f	a;;LbT;	block;;Lde/fernflower/code/cfg/BasicBlock;
c	Lcj;	Lde/fernflower/modules/decompiler/vars/VarDefinitionHelper;
	m	<init>(Lca;Lbn;Lce;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/vars/VarProcessor;)V
		ma	0	0
		ma	2	2
	m	a()V	setVarDefinitions()V
	m	a(Lca;)Ljava/util/Set;	initStatement(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/Set;
		ma	0	0
	m	a(Ljava/util/List;)Ljava/util/List;	getAllVars(Ljava/util/List;)Ljava/util/List;
	m	a(LaJ;Ljava/lang/Integer;)Z	setDefinition(Lde/fernflower/modules/decompiler/exps/Exprent;Ljava/lang/Integer;)Z
	f	a;;Ljava/util/HashMap;	mapVarDefStatements;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	mapStatementVars;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashSet;	implDefVars;;Ljava/util/HashSet;
	f	d;;Lce;	varproc;;Lde/fernflower/modules/decompiler/vars/VarProcessor;
c	Lck;	Lde/fernflower/main/rels/NestedClassProcessor$VarFieldPair;
	m	<init>(Ljava/lang/String;Lde;)V	<init>(Lde/fernflower/main/rels/NestedClassProcessor;Ljava/lang/String;Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)V
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	f	a;;Ljava/lang/String;	keyfield;;Ljava/lang/String;
	f	b;;Lde;	varpaar;;Lde/fernflower/modules/decompiler/vars/VarVersionPaar;
c	Lcl;	Lde/fernflower/main/Fernflower;
	m	<init>(Lde/fernflower/main/extern/IBytecodeProvider;Lde/fernflower/main/extern/IDecompilatSaver;Ljava/util/HashMap;)V	<init>(Lde/fernflower/main/extern/IBytecodeProvider;Lde/fernflower/main/extern/IDecompilatSaver;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()V	decompileContext()V
	m	a(LbW;Ljava/lang/String;)Ljava/lang/String;	getClassEntryName(Lde/fernflower/struct/StructClass;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	b()Li;	getStructcontext()Lde/fernflower/struct/StructContext;
	m	a(LbW;)Ljava/lang/String;	getClassContent(Lde/fernflower/struct/StructClass;)Ljava/lang/String;
		ma	0	0
	f	a;;Li;	structcontext;;Lde/fernflower/struct/StructContext;
	f	b;;LcG;	clprocessor;;Lde/fernflower/main/ClassesProcessor;
c	Lcm;	Lde/fernflower/util/SFormsFastMapDirect$1;
	m	<init>(ILcJ;)V	<init>(Lde/fernflower/util/SFormsFastMapDirect;ILde/fernflower/util/FastSparseSetFactory$FastSparseSet;)V
	m	getValue()Ljava/lang/Object;	getValue()Ljava/lang/Object;
	m	getKey()Ljava/lang/Object;	getKey()Ljava/lang/Object;
	m	setValue(Ljava/lang/Object;)Ljava/lang/Object;	setValue(Ljava/lang/Object;)Ljava/lang/Object;
		ma	0	0
	f	a;;Ljava/lang/Integer;	var;;Ljava/lang/Integer;
	f	b;;LcJ;	val;;Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;
c	Lcn;	Lde/fernflower/main/rels/NestedClassProcessor$2;
	m	<init>(LaK;Ljava/util/HashMap;LcX;Ljava/util/HashMap;)V	<init>(Lde/fernflower/main/rels/NestedClassProcessor;Lde/fernflower/main/ClassesProcessor$ClassNode;Ljava/util/HashMap;Lde/fernflower/main/rels/MethodWrapper;Ljava/util/HashMap;)V
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
	m	b(LaJ;)LaJ;	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)Lde/fernflower/modules/decompiler/exps/Exprent;
		ma	0	0
	f	a;;LaK;	val$child;;Lde/fernflower/main/ClassesProcessor$ClassNode;
	f	b;;Ljava/util/HashMap;	val$mapFieldsToNewVars;;Ljava/util/HashMap;
	f	c;;LcX;	val$meth;;Lde/fernflower/main/rels/MethodWrapper;
	f	d;;Ljava/util/HashMap;	val$mapParamsToNewVars;;Ljava/util/HashMap;
c	Lco;	Lde/fernflower/code/optinstructions/ALOAD;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lcp;	Lde/fernflower/main/rels/NestedClassProcessor$1;
	m	<init>(Ljava/util/HashMap;LaK;Ljava/util/HashMap;LcX;)V	<init>(Lde/fernflower/main/rels/NestedClassProcessor;Ljava/util/HashMap;Lde/fernflower/main/ClassesProcessor$ClassNode;Ljava/util/HashMap;Lde/fernflower/main/rels/MethodWrapper;)V
	m	a(LaJ;)I	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)I
		ma	0	0
	f	a;;Ljava/util/HashMap;	val$mapVarMasks;;Ljava/util/HashMap;
	f	b;;LaK;	val$node;;Lde/fernflower/main/ClassesProcessor$ClassNode;
	f	c;;Ljava/util/HashMap;	val$mapVarFieldPairs;;Ljava/util/HashMap;
	f	d;;LcX;	val$meth;;Lde/fernflower/main/rels/MethodWrapper;
c	Lcq;	Lde/fernflower/code/optinstructions/ILOAD;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lcr;	Lde/fernflower/modules/decompiler/ClearStructHelper;
	m	<init>()V	<init>()V
	m	a(LS;)V	clearStatements(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
		ma	0	0
c	Lcs;	Lde/fernflower/code/optinstructions/NEWARRAY;
	m	<init>()V	<init>()V
c	Lct;	Lde/fernflower/code/optinstructions/DLOAD;
	m	<clinit>()V	<clinit>()V
	m	<init>()V	<init>()V
c	Lcu;	Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;
	m	<init>()V	<init>()V
	m	a(LS;Lq;)V	setInitVars(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
	m	a(LaJ;)Z	checkTypeExprent(Lde/fernflower/modules/decompiler/exps/Exprent;)Z
	m	a(LaJ;LQ;I)Z	changeExprentType(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/struct/gen/VarType;I)Z
		ma	0	0
		ma	1	1
		ma	2	2
	m	a()Ljava/util/HashMap;	getMapExprentMaxTypes()Ljava/util/HashMap;
	m	b()Ljava/util/HashMap;	getMapExprentMinTypes()Ljava/util/HashMap;
	m	c()Ljava/util/HashMap;	getMapFinalVars()Ljava/util/HashMap;
	m	a(Lde;LQ;)V	setVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
	m	a(Lde;)LQ;	getVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Lde/fernflower/struct/gen/VarType;
		ma	0	0
	m	a(Lcu;LaJ;)Z	access$0(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;Lde/fernflower/modules/decompiler/exps/Exprent;)Z
		ma	0	0
		ma	1	1
	f	a;;Ljava/util/HashMap;	mapExprentMinTypes;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	mapExprentMaxTypes;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	mapFinalVars;;Ljava/util/HashMap;
c	Lcv;	Lde/fernflower/modules/decompiler/deobfuscator/IrreducibleCFGDeobfuscator$1Node;
	m	<init>(Ljava/lang/Integer;)V	<init>(Ljava/lang/Integer;)V
		ma	0	0
	f	a;;Ljava/lang/Integer;	id;;Ljava/lang/Integer;
	f	b;;Ljava/util/Set;	preds;;Ljava/util/Set;
	f	c;;Ljava/util/Set;	succs;;Ljava/util/Set;
c	Lcw;	Lde/fernflower/util/DataInputFullStream;
	m	<init>(Ljava/io/InputStream;)V	<init>(Ljava/io/InputStream;)V
		ma	0	0
	m	a([B)I	readFull([B)I
		ma	0	0
c	Lcx;	Lde/fernflower/modules/decompiler/stats/SequenceStatement;
	m	<init>()V	<init>()V
	m	<init>(Ljava/util/List;)V	<init>(Ljava/util/List;)V
	m	<init>(Lca;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a(Lca;)Lca;	isHead2Block(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
c	Lcy;	Lde/fernflower/modules/decompiler/IfHelper$IfNode;
	m	<init>(Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lcy;I)V	addChild(Lde/fernflower/modules/decompiler/IfHelper$IfNode;I)V
		ma	0	0
		ma	1	1
	f	a;;Lca;	value;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;Ljava/util/List;	succs;;Ljava/util/List;
	f	c;;Ljava/util/List;	edgetypes;;Ljava/util/List;
c	Lcz;	Lde/fernflower/struct/lazy/LazyLoader;
	m	<init>(Lde/fernflower/main/extern/IBytecodeProvider;)V	<init>(Lde/fernflower/main/extern/IBytecodeProvider;)V
		ma	0	0
	m	a(Ljava/lang/String;LbM;)V	addClassLink(Ljava/lang/String;Lde/fernflower/struct/lazy/LazyLoader$Link;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/String;)V	removeClassLink(Ljava/lang/String;)V
		ma	0	0
	m	b(Ljava/lang/String;)LbM;	getClassLink(Ljava/lang/String;)Lde/fernflower/struct/lazy/LazyLoader$Link;
		ma	0	0
	m	c(Ljava/lang/String;)LbK;	loadPool(Ljava/lang/String;)Lde/fernflower/struct/consts/ConstantPool;
		ma	0	0
	m	a(Lbn;I)[B	loadBytecode(Lde/fernflower/struct/StructMethod;I)[B
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/String;Ljava/lang/String;)Lcw;	getClassStream(Ljava/lang/String;Ljava/lang/String;)Lde/fernflower/util/DataInputFullStream;
		ma	0	0
		ma	1	1
	m	d(Ljava/lang/String;)Lcw;	getClassStream(Ljava/lang/String;)Lde/fernflower/util/DataInputFullStream;
		ma	0	0
	m	a(Lcw;)V	skipAttributes(Lde/fernflower/util/DataInputFullStream;)V
	f	a;;Ljava/util/HashMap;	mapClassLinks;;Ljava/util/HashMap;
	f	b;;Lde/fernflower/main/extern/IBytecodeProvider;	provider;;Lde/fernflower/main/extern/IBytecodeProvider;
c	Ld;	Lde/fernflower/modules/decompiler/vars/VarVersionsProcessor;
	m	<init>()V	<init>()V
	m	a(LS;)V	setVarVersions(Lde/fernflower/modules/decompiler/stats/RootStatement;)V
	m	a(Lcu;)V	eliminateNonJavaTypes(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;)V
	m	a(Lcu;Lq;)V	simpleMerge(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;Lde/fernflower/modules/decompiler/sforms/DirectGraph;)V
		ma	0	0
		ma	1	1
	m	b(Lcu;Lq;)V	setNewVarIndices(Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;Lde/fernflower/modules/decompiler/sforms/DirectGraph;)V
		ma	1	1
	m	a(Lde;)LQ;	getVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Lde/fernflower/struct/gen/VarType;
		ma	0	0
	m	a(Lde;LQ;)V	setVarType(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/struct/gen/VarType;)V
		ma	0	0
		ma	1	1
	m	b(Lde;)I	getVarFinal(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)I
		ma	0	0
	m	c(Lde;)V	setVarFinal(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;I)V
		ma	0	0
	m	a()Ljava/util/HashMap;	getMapOriginalVarIndices()Ljava/util/HashMap;
	f	a;;Ljava/util/HashMap;	mapOriginalVarIndices;;Ljava/util/HashMap;
	f	b;;Lcu;	typeproc;;Lde/fernflower/modules/decompiler/vars/VarTypeProcessor;
c	Lda;	Lde/fernflower/modules/decompiler/DecHelper;
	m	<init>()V	<init>()V
	m	a(Ljava/util/List;)Z	checkStatementExceptions(Ljava/util/List;)Z
		ma	0	0
	m	a(Lca;Ljava/util/List;)Z	isChoiceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/List;)Z
		ma	0	0
		ma	1	1
	m	a(Lca;)Ljava/util/HashSet;	getUniquePredExceptions(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/util/HashSet;
		ma	0	0
	m	b(Ljava/util/List;)Ljava/util/List;	copyExprentList(Ljava/util/List;)Ljava/util/List;
c	Ldb;	Lde/fernflower/code/optinstructions/LDC;
	m	<init>()V	<init>()V
c	Ldc;	Lde/fernflower/modules/renamer/IdentifierConverter;
	m	<init>()V	<init>()V
	m	a(Li;)V	rename(Lde/fernflower/struct/StructContext;)V
		ma	0	0
	m	a()V	renameClasses()V
	m	a(Ljava/lang/String;Ljava/util/HashMap;)Ljava/util/Set;	processExternalInterface(Lde/fernflower/struct/StructClass;)Ljava/util/HashMap;
	m	a(LV;Ljava/util/Map;Ljava/util/Set;)Ljava/util/Set;	renameClass(Lde/fernflower/struct/StructClass;)V
	m	a(LbW;)Ljava/util/Map;	renameAllClasses()V
	m	c()V	renameInterfaces()V
	m	a(LbW;Ljava/util/Map;Ljava/util/Map;)V	renameClassIdentifiers(Lde/fernflower/struct/StructClass;Ljava/util/HashMap;)V
	m	a(ZLjava/lang/String;)Ljava/lang/String;	buildNewDescriptor(ZLjava/lang/String;)Ljava/lang/String;
		ma	1	1
	m	a(Ljava/util/List;)Ljava/util/List;	getReversePostOrderListIterative(Ljava/util/List;)Ljava/util/List;
	m	e()V	buildInheritanceTree()V
	f	a;;Li;	context;;Lde/fernflower/struct/StructContext;
	f	b;;Lde/fernflower/main/extern/IIdentifierRenamer;	helper;;Lde/fernflower/main/extern/IIdentifierRenamer;
	f	c;;Lu;	interceptor;;Lde/fernflower/modules/renamer/PoolInterceptor;
	f	d;;Ljava/util/List;	rootClasses;;Ljava/util/List;
	f	e;;Ljava/util/List;	rootInterfaces;;Ljava/util/List;
	f	f;;Ljava/util/Map;	interfaceNameMaps;;Ljava/util/HashMap;
c	Ldd;	Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper;
	m	<init>()V	<init>()V
	m	a(LS;)Lq;	buildDirectGraph(Lde/fernflower/modules/decompiler/stats/RootStatement;)Lde/fernflower/modules/decompiler/sforms/DirectGraph;
	m	a(LcF;Lca;ILcF;LcF;Lca;Lca;Z)V	saveEdge(Lde/fernflower/modules/decompiler/sforms/DirectNode;Lde/fernflower/modules/decompiler/stats/Statement;ILde/fernflower/modules/decompiler/sforms/DirectNode;Lde/fernflower/modules/decompiler/sforms/DirectNode;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Z)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
		ma	5	5
		ma	6	6
		ma	7	7
	m	b()V	setEdges()V
	m	a()Ljava/util/HashMap;	getMapDestinationNodes()Ljava/util/HashMap;
	f	a;;Ljava/util/HashMap;	mapDestinationNodes;;Ljava/util/HashMap;
	f	b;;Ljava/util/List;	listEdges;;Ljava/util/List;
	f	c;;Ljava/util/HashMap;	mapShortRangeFinallyPathIds;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashMap;	mapLongRangeFinallyPathIds;;Ljava/util/HashMap;
	f	e;;Ljava/util/HashMap;	mapPosIfBranch;;Ljava/util/HashMap;
	f	f;;Lq;	graph;;Lde/fernflower/modules/decompiler/sforms/DirectGraph;
	f	g;;LS;	root;;Lde/fernflower/modules/decompiler/stats/RootStatement;
c	Lde/fernflower/main/decompiler/ConsoleDecompiler;	Lde/fernflower/main/decompiler/ConsoleDecompiler;
	m	<init>()V	<init>()V
	m	<init>(Ljava/util/HashMap;)V	<init>(Ljava/util/HashMap;)V
		ma	0	0
	m	<init>(Lde/fernflower/main/extern/IFernflowerLogger;Ljava/util/HashMap;)V	<init>(Lde/fernflower/main/extern/IFernflowerLogger;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
	m	main([Ljava/lang/String;)V	main([Ljava/lang/String;)V
		ma	0	0
	m	a()V	printHelp()V
	m	addSpace(Ljava/io/File;Z)V	addSpace(Ljava/io/File;Z)V
		ma	0	0
		ma	1	1
	m	decompileContext(Ljava/io/File;)V	decompileContext(Ljava/io/File;)V
		ma	0	0
	m	getBytecodeStream(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;	getBytecodeStream(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
		ma	1	1
	m	a(Ljava/lang/String;)Ljava/lang/String;	getAbsolutePath(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;)Z	addEntryName(Ljava/lang/String;Ljava/lang/String;)Z
		ma	0	0
		ma	1	1
	m	copyEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	copyEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	3	3
	m	copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	saveFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	createArchive(Ljava/lang/String;Ljava/lang/String;Ljava/util/jar/Manifest;)V	createArchive(Ljava/lang/String;Ljava/lang/String;Ljava/util/jar/Manifest;)V
		ma	0	0
		ma	2	2
	m	saveClassEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveClassEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	saveClassFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveClassFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	saveEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	saveFolder(Ljava/lang/String;)V	saveFolder(Ljava/lang/String;)V
		ma	0	0
	m	closeArchive(Ljava/lang/String;Ljava/lang/String;)V	closeArchive(Ljava/lang/String;Ljava/lang/String;)V
		ma	1	1
	f	a;;Ljava/io/File;	root;;Ljava/io/File;
	f	b;;Lcl;	fernflower;;Lde/fernflower/main/Fernflower;
	f	c;;Ljava/util/HashMap;	mapArchiveStreams;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashMap;	mapArchiveEntries;;Ljava/util/HashMap;
c	Lde/fernflower/main/extern/IBytecodeProvider;	Lde/fernflower/main/extern/IBytecodeProvider;
	m	getBytecodeStream(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;	getBytecodeStream(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
		ma	0	0
		ma	1	1
c	Lde/fernflower/main/extern/IDecompilatSaver;	Lde/fernflower/main/extern/IDecompilatSaver;
	m	copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	copyFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	saveFolder(Ljava/lang/String;)V	saveFolder(Ljava/lang/String;)V
		ma	0	0
	m	saveClassFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveClassFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	saveFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	createArchive(Ljava/lang/String;Ljava/lang/String;Ljava/util/jar/Manifest;)V	createArchive(Ljava/lang/String;Ljava/lang/String;Ljava/util/jar/Manifest;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	saveClassEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveClassEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
	m	saveEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	saveEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	copyEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	copyEntry(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	closeArchive(Ljava/lang/String;Ljava/lang/String;)V	closeArchive(Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
c	Lde/fernflower/main/extern/IFernflowerLogger;	Lde/fernflower/main/extern/IFernflowerLogger;
	m	<clinit>()V	<clinit>()V
	m	writeMessage(Ljava/lang/String;I)V	writeMessage(Ljava/lang/String;I)V
		ma	0	0
		ma	1	1
	m	writeMessage(Ljava/lang/String;II)V	writeMessage(Ljava/lang/String;II)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	startClass(Ljava/lang/String;)V	startClass(Ljava/lang/String;)V
		ma	0	0
	m	endClass()V	endClass()V
	m	startWriteClass(Ljava/lang/String;)V	startWriteClass(Ljava/lang/String;)V
		ma	0	0
	m	endWriteClass()V	endWriteClass()V
	m	startMethod(Ljava/lang/String;)V	startMethod(Ljava/lang/String;)V
		ma	0	0
	m	endMethod()V	endMethod()V
	m	getSeverity()I	getSeverity()I
	m	setSeverity(I)V	setSeverity(I)V
		ma	0	0
	m	getShowStacktrace()Z	getShowStacktrace()Z
	f	DEBUG;;I	TRACE;;I
	f	INFO;;I	INFO;;I
	f	WARNING;;I	WARNING;;I
	f	ERROR;;I	ERROR;;I
	f	IMMEDIATE;;I	IMMEDIATE;;I
	f	mapLogLevel;;Ljava/util/HashMap;	mapLogLevel;;Ljava/util/HashMap;
	f	names;;[Ljava/lang/String;	names;;[Ljava/lang/String;
c	Lde/fernflower/main/extern/IFernflowerPreferences;	Lde/fernflower/main/extern/IFernflowerPreferences;
	f	REMOVE_BRIDGE;;Ljava/lang/String;	REMOVE_BRIDGE;;Ljava/lang/String;
	f	REMOVE_SYNTHETIC;;Ljava/lang/String;	REMOVE_SYNTHETIC;;Ljava/lang/String;
	f	DECOMPILE_INNER;;Ljava/lang/String;	DECOMPILE_INNER;;Ljava/lang/String;
	f	DECOMPILE_CLASS_1_4;;Ljava/lang/String;	DECOMPILE_CLASS_1_4;;Ljava/lang/String;
	f	DECOMPILE_ASSERTIONS;;Ljava/lang/String;	DECOMPILE_ASSERTIONS;;Ljava/lang/String;
	f	HIDE_EMPTY_SUPER;;Ljava/lang/String;	HIDE_EMPTY_SUPER;;Ljava/lang/String;
	f	HIDE_DEFAULT_CONSTRUCTOR;;Ljava/lang/String;	HIDE_DEFAULT_CONSTRUCTOR;;Ljava/lang/String;
	f	DECOMPILE_GENERIC_SIGNATURES;;Ljava/lang/String;	DECOMPILE_GENERIC_SIGNATURES;;Ljava/lang/String;
	f	OUTPUT_COPYRIGHT_COMMENT;;Ljava/lang/String;	OUTPUT_COPYRIGHT_COMMENT;;Ljava/lang/String;
	f	NO_EXCEPTIONS_RETURN;;Ljava/lang/String;	NO_EXCEPTIONS_RETURN;;Ljava/lang/String;
	f	DECOMPILE_ENUM;;Ljava/lang/String;	DECOMPILE_ENUM;;Ljava/lang/String;
	f	REMOVE_GETCLASS_NEW;;Ljava/lang/String;	REMOVE_GETCLASS_NEW;;Ljava/lang/String;
	f	BOOLEAN_TRUE_ONE;;Ljava/lang/String;	BOOLEAN_TRUE_ONE;;Ljava/lang/String;
	f	SYNTHETIC_NOT_SET;;Ljava/lang/String;	SYNTHETIC_NOT_SET;;Ljava/lang/String;
	f	UNDEFINED_PARAM_TYPE_OBJECT;;Ljava/lang/String;	UNDEFINED_PARAM_TYPE_OBJECT;;Ljava/lang/String;
	f	USE_DEBUG_VARNAMES;;Ljava/lang/String;	USE_DEBUG_VARNAMES;;Ljava/lang/String;
	f	MAX_PROCESSING_METHOD;;Ljava/lang/String;	MAX_PROCESSING_METHOD;;Ljava/lang/String;
	f	REMOVE_EMPTY_RANGES;;Ljava/lang/String;	REMOVE_EMPTY_RANGES;;Ljava/lang/String;
	f	ASCII_STRING_CHARACTERS;;Ljava/lang/String;	ASCII_STRING_CHARACTERS;;Ljava/lang/String;
	f	FINALLY_DEINLINE;;Ljava/lang/String;	FINALLY_DEINLINE;;Ljava/lang/String;
	f	FINALLY_CATCHALL;;Ljava/lang/String;	FINALLY_CATCHALL;;Ljava/lang/String;
	f	FINALLY_SEMAPHOR;;Ljava/lang/String;	FINALLY_SEMAPHOR;;Ljava/lang/String;
	f	RENAME_ENTITIES;;Ljava/lang/String;	RENAME_ENTITIES;;Ljava/lang/String;
	f	USER_RENAMER_CLASS;;Ljava/lang/String;	USER_RENAMER_CLASS;;Ljava/lang/String;
	f	LOG_LEVEL;;Ljava/lang/String;	LOG_LEVEL;;Ljava/lang/String;
c	Lde/fernflower/main/extern/IIdentifierRenamer;	Lde/fernflower/main/extern/IIdentifierRenamer;
	m	toBeRenamed(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z	toBeRenamed(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	getNextClassname(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextClassname(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
	m	getNextFieldname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextFieldname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	m	getNextMethodname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	getNextMethodname(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
		ma	1	1
		ma	2	2
	f	ELEMENT_CLASS;;I	ELEMENT_CLASS;;I
	f	ELEMENT_FIELD;;I	ELEMENT_FIELD;;I
	f	ELEMENT_METHOD;;I	ELEMENT_METHOD;;I
c	Lde/fernflower/main/extern/a;	Lde/fernflower/main/extern/IFernflowerLogger$1;
	m	<init>()V	<init>()V
c	Lde;	Lde/fernflower/modules/decompiler/vars/VarVersionPaar;
	m	<init>(II)V	<init>(II)V
		ma	0	0
		ma	1	1
	m	<init>(Ljava/lang/Integer;Ljava/lang/Integer;)V	<init>(Ljava/lang/Integer;Ljava/lang/Integer;)V
		ma	0	0
		ma	1	1
	m	<init>(Laa;)V	<init>(Lde/fernflower/modules/decompiler/exps/VarExprent;)V
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	f	a;;I	var;;I
	f	b;;I	version;;I
	f	c;;I	hashCode;;I
c	Le;	Lde/fernflower/modules/decompiler/stats/GeneralStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;Ljava/util/Collection;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/Collection;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	2	2
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
c	Lf;	Lde/fernflower/code/optinstructions/GOTO;
	m	<init>()V	<init>()V
c	Lg;	Lde/fernflower/struct/consts/LinkConstant;
	m	<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	<init>(III)V	<init>(III)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LbK;)V	resolveConstant(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a()V	initConstant()V
	f	f;;I	index1;;I
	f	g;;I	index2;;I
	f	a;;Ljava/lang/String;	classname;;Ljava/lang/String;
	f	b;;Ljava/lang/String;	elementname;;Ljava/lang/String;
	f	c;;Ljava/lang/String;	descriptor;;Ljava/lang/String;
c	Lh;	Lde/fernflower/modules/decompiler/stats/CatchAllStatement;
	m	<init>()V	<init>()V
	m	<init>(Lca;Lca;)V	<init>(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a(Lca;)Lca;	isHead(Lde/fernflower/modules/decompiler/stats/Statement;)Lde/fernflower/modules/decompiler/stats/Statement;
		ma	0	0
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	a(Lca;Lca;)V	replaceStatement(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
		ma	1	1
	m	a()Lca;	getSimpleCopy()Lde/fernflower/modules/decompiler/stats/Statement;
	m	b()V	initSimpleCopy()V
	m	c()Lca;	getHandler()Lde/fernflower/modules/decompiler/stats/Statement;
	m	a_()Z	isFinally()Z
	m	e()V	setFinally(Z)V
	m	f()Laa;	getMonitor()Lde/fernflower/modules/decompiler/exps/VarExprent;
	m	a(Laa;)V	setMonitor(Lde/fernflower/modules/decompiler/exps/VarExprent;)V
		ma	0	0
	m	g()Ljava/util/List;	getVars()Ljava/util/List;
	f	a;;Lca;	handler;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	b;;Z	isFinally;;Z
	f	k;;Laa;	monitor;;Lde/fernflower/modules/decompiler/exps/VarExprent;
	f	l;;Ljava/util/List;	vars;;Ljava/util/List;
c	Li;	Lde/fernflower/struct/StructContext;
	m	<init>(Lde/fernflower/main/extern/IDecompilatSaver;Lcl;Lcz;)V	<init>(Lde/fernflower/main/extern/IDecompilatSaver;Lde/fernflower/struct/IDecompiledData;Lde/fernflower/struct/lazy/LazyLoader;)V
		ma	0	0
		ma	2	2
	m	a(Ljava/lang/String;)LbW;	getClass(Ljava/lang/String;)Lde/fernflower/struct/StructClass;
		ma	0	0
	m	a()V	reloadContext()V
	m	b()V	saveContext()V
	m	a(Ljava/io/File;Z)V	addSpace(Ljava/io/File;Z)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/String;Ljava/io/File;Z)V	addSpace(Ljava/lang/String;Ljava/io/File;Z)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Ljava/lang/String;Ljava/io/File;IZ)V	addArchive(Ljava/lang/String;Ljava/io/File;IZ)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	m	c()Ljava/util/HashMap;	getClasses()Ljava/util/HashMap;
	f	a;;Lcz;	loader;;Lde/fernflower/struct/lazy/LazyLoader;
	f	b;;Ljava/util/HashMap;	classes;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	units;;Ljava/util/HashMap;
	f	d;;LcZ;	defaultUnit;;Lde/fernflower/struct/ContextUnit;
	f	e;;Lde/fernflower/main/extern/IDecompilatSaver;	saver;;Lde/fernflower/main/extern/IDecompilatSaver;
	f	f;;Lcl;	decdata;;Lde/fernflower/struct/IDecompiledData;
c	Lj;	Lde/fernflower/code/Instruction;
	m	<init>()V	<init>()V
	m	a()I	operandsCount()I
	m	a(I)I	getOperand(I)I
		ma	0	0
	m	b()Lj;	clone()Lde/fernflower/code/Instruction;
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	a(LcQ;)V	initInstruction(Lde/fernflower/code/InstructionSequence;)V
		ma	0	0
	m	c()[I	getOperands()[I
	m	a([I)V	setOperands([I)V
		ma	0	0
	m	clone()Ljava/lang/Object;	clone()Ljava/lang/Object;
	f	a;;I	opcode;;I
	f	b;;I	group;;I
	f	c;;Z	wide;;Z
	f	d;;[I	operands;;[I
c	Lk;	Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper$Edge;
	m	<init>(Ljava/lang/String;Ljava/lang/Integer;I)V	<init>(Ljava/lang/String;Ljava/lang/Integer;I)V
		ma	0	0
		ma	1	1
		ma	2	2
	f	a;;Ljava/lang/String;	sourceid;;Ljava/lang/String;
	f	b;;Ljava/lang/Integer;	statid;;Ljava/lang/Integer;
	f	c;;I	edgetype;;I
c	Ll;	Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper$FinallyPathWrapper;
	m	<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	hashCode()I	hashCode()I
	m	<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ll;)V	<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper$FinallyPathWrapper;)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	f	a;;Ljava/lang/String;	source;;Ljava/lang/String;
	f	b;;Ljava/lang/String;	destination;;Ljava/lang/String;
	f	c;;Ljava/lang/String;	entry;;Ljava/lang/String;
c	Lm;	Lde/fernflower/struct/attr/StructConstantValueAttribute;
	m	<init>()V	<init>()V
	m	a(LbK;)V	initContent(Lde/fernflower/struct/consts/ConstantPool;)V
		ma	0	0
	m	a()I	getIndex()I
	f	c;;I	index;;I
c	Ln;	Lde/fernflower/code/optinstructions/JSR_W;
	m	<init>()V	<init>()V
c	Lo;	Lde/fernflower/modules/decompiler/exps/IfExprent;
	m	<clinit>()V	<clinit>()V
	m	<init>(ILcb;)V	<init>(ILde/fernflower/util/ListStack;)V
		ma	0	0
		ma	1	1
	m	<init>(LaJ;)V	<init>(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	m	a()LaJ;	copy()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	b()Ljava/util/List;	getAllExprents()Ljava/util/List;
	m	a(I)Ljava/lang/String;	toJava(I)Ljava/lang/String;
		ma	0	0
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	a(LaJ;LaJ;)V	replaceExprent(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
		ma	1	1
	m	b_()Lo;	negateIf()Lde/fernflower/modules/decompiler/exps/IfExprent;
	m	d()LaJ;	getCondition()Lde/fernflower/modules/decompiler/exps/Exprent;
	m	a(LaJ;)V	setCondition(Lde/fernflower/modules/decompiler/exps/Exprent;)V
		ma	0	0
	f	c;;[I	functypes;;[I
	f	d;;LaJ;	condition;;Lde/fernflower/modules/decompiler/exps/Exprent;
c	Lp;	Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;
	m	<init>(Law;)V	<init>(Lde/fernflower/util/FastFixedSetFactory;)V
		ma	0	0
	m	a()Lp;	getCopy()Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;
	m	b()V	setAllElements()V
	m	a(Ljava/lang/Object;)V	add(Ljava/lang/Object;)V
	m	a(Ljava/util/Collection;)V	addAll(Ljava/util/Collection;)V
	m	b(Ljava/lang/Object;)V	remove(Ljava/lang/Object;)V
	m	c(Ljava/lang/Object;)Z	contains(Ljava/lang/Object;)Z
	m	a(Lp;)Z	contains(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)Z
	m	b(Lp;)V	union(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)V
	m	c(Lp;)V	intersection(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)V
	m	d(Lp;)V	complement(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)V
	m	equals(Ljava/lang/Object;)Z	equals(Ljava/lang/Object;)Z
	m	c()Z	isEmpty()Z
	m	iterator()Ljava/util/Iterator;	iterator()Ljava/util/Iterator;
	m	d()Ljava/util/Set;	toPlainSet()Ljava/util/Set;
	m	b(Ljava/util/Collection;)Ljava/util/Collection;	toPlainCollection(Ljava/util/Collection;)Ljava/util/Collection;
		ma	0	0
	m	toString()Ljava/lang/String;	toString()Ljava/lang/String;
	m	e()Law;	getFactory()Lde/fernflower/util/FastFixedSetFactory;
	m	e(Lp;)[I	access$0(Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)[I
	m	<init>(Law;Lp;)V	<init>(Lde/fernflower/util/FastFixedSetFactory;Lde/fernflower/util/FastFixedSetFactory$FastFixedSet;)V
		ma	0	0
		ma	1	1
	f	a;;Law;	factory;;Lde/fernflower/util/FastFixedSetFactory;
	f	b;;LcE;	colValuesInternal;;Lde/fernflower/util/VBStyleCollection;
	f	c;;[I	data;;[I
c	Lq;	Lde/fernflower/modules/decompiler/sforms/DirectGraph;
	m	<init>()V	<init>()V
	m	a()V	sortReversePostOrder()V
	m	a(LcF;Ljava/util/List;)V	addToReversePostOrderListIterative(Lde/fernflower/modules/decompiler/sforms/DirectNode;Ljava/util/List;)V
	m	a(LbV;)Z	iterateExprents(Lde/fernflower/modules/decompiler/sforms/DirectGraph$ExprentIterator;)Z
		ma	0	0
	f	a;;LcE;	nodes;;Lde/fernflower/util/VBStyleCollection;
	f	b;;LcF;	first;;Lde/fernflower/modules/decompiler/sforms/DirectNode;
	f	c;;Ljava/util/HashMap;	mapShortRangeFinallyPaths;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashMap;	mapLongRangeFinallyPaths;;Ljava/util/HashMap;
	f	e;;Ljava/util/HashMap;	mapNegIfBranch;;Ljava/util/HashMap;
	f	f;;Ljava/util/HashMap;	mapFinallyMonitorExceptionPathExits;;Ljava/util/HashMap;
c	Lr;	Lde/fernflower/modules/code/DeadCodeHelper;
	m	<init>()V	<init>()V
	m	a(LcI;)V	removeDeadBlocks(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	b(LcI;)V	removeEmptyBlocks(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	a(LcI;LbT;Z)Z	removeEmptyBlock(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/code/cfg/BasicBlock;Z)Z
		ma	0	0
		ma	1	1
	m	a(LcI;LbT;LbT;)Z	isDominator(Lde/fernflower/code/cfg/ControlFlowGraph;Lde/fernflower/code/cfg/BasicBlock;Lde/fernflower/code/cfg/BasicBlock;)Z
		ma	0	0
		ma	2	2
	m	c(LcI;)V	removeGotos(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	d(LcI;)V	incorporateValueReturns(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
	m	e(LcI;)V	mergeBasicBlocks(Lde/fernflower/code/cfg/ControlFlowGraph;)V
		ma	0	0
c	Ls;	Lde/fernflower/modules/decompiler/sforms/SSAUConstructorSparseEx;
	m	<init>()V	<init>()V
	m	a(LS;Lbn;)V	splitVariables(Lde/fernflower/modules/decompiler/stats/RootStatement;Lde/fernflower/struct/StructMethod;)V
		ma	0	0
		ma	1	1
	m	a(Lq;Ljava/util/HashSet;Z)V	ssaStatements(Lde/fernflower/modules/decompiler/sforms/DirectGraph;Ljava/util/HashSet;Z)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LaJ;[LbZ;Lca;Z)V	processExprent(Lde/fernflower/modules/decompiler/exps/Exprent;[Lde/fernflower/util/SFormsFastMapDirect;Lde/fernflower/modules/decompiler/stats/Statement;Z)V
		ma	0	0
		ma	2	2
		ma	3	3
	m	a(Lde;LcJ;Lca;)V	createOrUpdatePhiNode(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/util/FastSparseSetFactory$FastSparseSet;Lde/fernflower/modules/decompiler/stats/Statement;)V
		ma	0	0
	m	a(Lde;LbZ;)V	varMapToGraph(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;Lde/fernflower/util/SFormsFastMapDirect;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/Integer;Lca;)Ljava/lang/Integer;	getNextFreeVersion(Ljava/lang/Integer;Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/lang/Integer;
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;Lq;Ljava/lang/String;)LbZ;	getFilteredOutMap(Ljava/lang/String;Ljava/lang/String;Lde/fernflower/modules/decompiler/sforms/DirectGraph;Ljava/lang/String;)Lde/fernflower/util/SFormsFastMapDirect;
		ma	1	1
		ma	2	2
	m	a(LbZ;LbZ;)LbZ;	mergeMaps(Lde/fernflower/util/SFormsFastMapDirect;Lde/fernflower/util/SFormsFastMapDirect;)Lde/fernflower/util/SFormsFastMapDirect;
	m	b(LbZ;LbZ;)Z	mapsEqual(Lde/fernflower/util/SFormsFastMapDirect;Lde/fernflower/util/SFormsFastMapDirect;)Z
	m	a(LbZ;Ljava/lang/Integer;Ljava/lang/Integer;)V	setCurrentVar(Lde/fernflower/util/SFormsFastMapDirect;Ljava/lang/Integer;Ljava/lang/Integer;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lca;Lq;Ldd;)V	setCatchMaps(Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/sforms/DirectGraph;Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(Lbn;LS;)LbZ;	createFirstMap(Lde/fernflower/struct/StructMethod;Lde/fernflower/modules/decompiler/stats/RootStatement;)Lde/fernflower/util/SFormsFastMapDirect;
		ma	0	0
		ma	1	1
	m	a(Lca;)Ljava/lang/Integer;	getFirstProtectedRange(Lde/fernflower/modules/decompiler/stats/Statement;)Ljava/lang/Integer;
	m	a()Las;	getSsuversions()Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;
	m	a(Lde;)LbZ;	getLiveVarVersionsMap(Lde/fernflower/modules/decompiler/vars/VarVersionPaar;)Lde/fernflower/util/SFormsFastMapDirect;
		ma	0	0
	m	b()Ljava/util/HashMap;	getMapVersionFirstRange()Ljava/util/HashMap;
	m	c()Ljava/util/HashMap;	getMapFieldVars()Ljava/util/HashMap;
	f	a;;Ljava/util/HashMap;	inVarVersions;;Ljava/util/HashMap;
	f	b;;Ljava/util/HashMap;	outVarVersions;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	outNegVarVersions;;Ljava/util/HashMap;
	f	d;;Ljava/util/HashMap;	extraVarVersions;;Ljava/util/HashMap;
	f	e;;Ljava/util/HashMap;	phi;;Ljava/util/HashMap;
	f	f;;Ljava/util/HashMap;	lastversion;;Ljava/util/HashMap;
	f	g;;Ljava/util/HashMap;	mapVersionFirstRange;;Ljava/util/HashMap;
	f	h;;Ljava/util/HashMap;	phantomppnodes;;Ljava/util/HashMap;
	f	i;;Ljava/util/HashMap;	phantomexitnodes;;Ljava/util/HashMap;
	f	j;;Las;	ssuversions;;Lde/fernflower/modules/decompiler/vars/VarVersionsGraph;
	f	k;;Ljava/util/HashMap;	mapFieldVars;;Ljava/util/HashMap;
	f	l;;I	fieldvarcounter;;I
	f	m;;LcM;	factory;;Lde/fernflower/util/FastSparseSetFactory;
cu	a	Lt;
c	Lu;	Lde/fernflower/modules/renamer/PoolInterceptor;
	m	<init>(Lde/fernflower/main/extern/IIdentifierRenamer;)V	<init>(Lde/fernflower/main/extern/IIdentifierRenamer;)V
		ma	0	0
	m	a(Ljava/lang/String;Ljava/lang/String;)V	getName(Ljava/lang/String;)Ljava/lang/String;
	m	b(Ljava/lang/String;Ljava/lang/String;)V	addName(Ljava/lang/String;Ljava/lang/String;)V
		ma	0	0
		ma	1	1
	m	a(Ljava/lang/String;)Ljava/lang/String;	getOldName(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	m	a()Lde/fernflower/main/extern/IIdentifierRenamer;	getHelper()Lde/fernflower/main/extern/IIdentifierRenamer;
	f	a;;Lde/fernflower/main/extern/IIdentifierRenamer;	helper;;Lde/fernflower/main/extern/IIdentifierRenamer;
	f	b;;Ljava/util/HashMap;	mapOldToNewNames;;Ljava/util/HashMap;
	f	c;;Ljava/util/HashMap;	mapNewToOldNames;;Ljava/util/HashMap;
c	Lv;	Lde/fernflower/main/rels/ClassWrapper;
	m	<init>(LbW;)V	<init>(Lde/fernflower/struct/StructClass;)V
		ma	0	0
	m	a()V	init()V
	m	a(Ljava/lang/String;Ljava/lang/String;)LcX;	getMethodWrapper(Ljava/lang/String;Ljava/lang/String;)Lde/fernflower/main/rels/MethodWrapper;
		ma	0	0
		ma	1	1
	m	b()LbW;	getClassStruct()Lde/fernflower/struct/StructClass;
	m	c()LcE;	getMethods()Lde/fernflower/util/VBStyleCollection;
	m	d()Ljava/util/HashSet;	getHideMembers()Ljava/util/HashSet;
	m	e()LcE;	getStaticFieldInitializers()Lde/fernflower/util/VBStyleCollection;
	m	f()LcE;	getDynamicFieldInitializers()Lde/fernflower/util/VBStyleCollection;
	f	a;;LbW;	classStruct;;Lde/fernflower/struct/StructClass;
	f	b;;Ljava/util/HashSet;	hideMembers;;Ljava/util/HashSet;
	f	c;;LcE;	staticFieldInitializers;;Lde/fernflower/util/VBStyleCollection;
	f	d;;LcE;	dynamicFieldInitializers;;Lde/fernflower/util/VBStyleCollection;
	f	e;;LcE;	methods;;Lde/fernflower/util/VBStyleCollection;
c	Lw;	Lde/fernflower/struct/gen/generics/GenericType;
	m	<init>(IILjava/lang/String;)V	<init>(IILjava/lang/String;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	<init>(Ljava/lang/String;)V	<init>(Ljava/lang/String;)V
		ma	0	0
	m	b(Ljava/lang/String;)V	parseSignature(Ljava/lang/String;)V
		ma	0	0
	m	a(Ljava/lang/String;Lw;)V	parseArgumentsList(Ljava/lang/String;Lde/fernflower/struct/gen/generics/GenericType;)V
	m	a(Ljava/lang/String;)Ljava/lang/String;	getNextType(Ljava/lang/String;)Ljava/lang/String;
		ma	0	0
	m	a()Ljava/util/List;	getArguments()Ljava/util/List;
	m	b()Ljava/util/List;	getEnclosingClasses()Ljava/util/List;
	m	c()Ljava/util/List;	getWildcards()Ljava/util/List;
	f	a;;I	type;;I
	f	b;;I	arraydim;;I
	f	c;;Ljava/lang/String;	value;;Ljava/lang/String;
	f	d;;Ljava/util/List;	enclosingClasses;;Ljava/util/List;
	f	e;;Ljava/util/List;	arguments;;Ljava/util/List;
	f	f;;Ljava/util/List;	wildcards;;Ljava/util/List;
c	Lx;	Lde/fernflower/main/ClassReference14Processor;
	m	<init>()V	<init>()V
	m	a(LaK;)V	processClassReferences(Lde/fernflower/main/ClassesProcessor$ClassNode;)V
	m	a(LaK;Ljava/util/HashMap;Ljava/util/HashSet;)V	processClassRec(Lde/fernflower/main/ClassesProcessor$ClassNode;Ljava/util/HashMap;Ljava/util/HashSet;)V
		ma	0	0
		ma	1	1
		ma	2	2
	m	a(LaK;Ljava/util/HashMap;)V	findClassMethod(Lde/fernflower/main/ClassesProcessor$ClassNode;Ljava/util/HashMap;)V
		ma	0	0
		ma	1	1
	m	a(LaJ;Lv;LcX;)Z	replaceInvocations(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/main/rels/ClassWrapper;Lde/fernflower/main/rels/MethodWrapper;)Z
		ma	0	0
	m	b(LaJ;Lv;LcX;)Ljava/lang/String;	isClass14Invocation(Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/main/rels/ClassWrapper;Lde/fernflower/main/rels/MethodWrapper;)Ljava/lang/String;
	m	a(Lx;LaJ;Lv;LcX;)Z	access$0(Lde/fernflower/main/ClassReference14Processor;Lde/fernflower/modules/decompiler/exps/Exprent;Lde/fernflower/main/rels/ClassWrapper;Lde/fernflower/main/rels/MethodWrapper;)Z
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
	f	a;;Lao;	bodyexprent;;Lde/fernflower/modules/decompiler/exps/ExitExprent;
	f	b;;Lao;	handlerexprent;;Lde/fernflower/modules/decompiler/exps/ExitExprent;
c	Ly;	Lde/fernflower/modules/decompiler/decompose/FastExtendedPostdominanceHelper$IReachabilityAction;
	m	a(Lca;Ljava/util/HashMap;)Z	action(Lde/fernflower/modules/decompiler/stats/Statement;Ljava/util/HashMap;)Z
		ma	0	0
		ma	1	1
c	Lz;	Lde/fernflower/modules/decompiler/sforms/FlattenStatementsHelper$StackEntry;
	m	<init>(Lh;ZILca;Lca;Lca;LcF;LcF;Z)V	<init>(Lde/fernflower/modules/decompiler/stats/CatchAllStatement;ZILde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/stats/Statement;Lde/fernflower/modules/decompiler/sforms/DirectNode;Lde/fernflower/modules/decompiler/sforms/DirectNode;Z)V
		ma	0	0
		ma	1	1
		ma	2	2
		ma	3	3
		ma	4	4
		ma	5	5
		ma	6	6
		ma	7	7
		ma	8	8
	m	<init>(Lh;Z)V	<init>(Lde/fernflower/modules/decompiler/stats/CatchAllStatement;Z)V
		ma	0	0
		ma	1	1
	f	a;;Lh;	catchstatement;;Lde/fernflower/modules/decompiler/stats/CatchAllStatement;
	f	b;;Z	state;;Z
	f	c;;I	edgetype;;I
	f	d;;Z	isFinallyExceptionPath;;Z
	f	e;;Lca;	destination;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	f;;Lca;	finallyShortRangeEntry;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	g;;Lca;	finallyLongRangeEntry;;Lde/fernflower/modules/decompiler/stats/Statement;
	f	h;;LcF;	finallyShortRangeSource;;Lde/fernflower/modules/decompiler/sforms/DirectNode;
	f	i;;LcF;	finallyLongRangeSource;;Lde/fernflower/modules/decompiler/sforms/DirectNode;
